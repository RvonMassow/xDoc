/*
* generated by Xtext
*/

package org.eclipse.xtext.xdoc.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class XdocGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class XdocFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XdocFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cXdocFileAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final RuleCall cMULTI_NLTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cMainSectionAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final Alternatives cMainSectionAlternatives_3_0_0 = (Alternatives)cMainSectionAssignment_3_0.eContents().get(0);
		private final RuleCall cMainSectionDocumentParserRuleCall_3_0_0_0 = (RuleCall)cMainSectionAlternatives_3_0_0.eContents().get(0);
		private final RuleCall cMainSectionPartParserRuleCall_3_0_0_1 = (RuleCall)cMainSectionAlternatives_3_0_0.eContents().get(1);
		private final RuleCall cMainSectionChapterParserRuleCall_3_0_0_2 = (RuleCall)cMainSectionAlternatives_3_0_0.eContents().get(2);
		private final RuleCall cMainSectionSectionParserRuleCall_3_0_0_3 = (RuleCall)cMainSectionAlternatives_3_0_0.eContents().get(3);
		private final RuleCall cMainSectionSection2ParserRuleCall_3_0_0_4 = (RuleCall)cMainSectionAlternatives_3_0_0.eContents().get(4);
		private final RuleCall cMULTI_NLTerminalRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		
		//XdocFile:
		//
		//	{XdocFile} WS? MULTI_NL? (mainSection=(Document | Part | Chapter | Section | Section2) MULTI_NL?)?;
		public ParserRule getRule() { return rule; }

		//{XdocFile} WS? MULTI_NL? (mainSection=(Document | Part | Chapter | Section | Section2) MULTI_NL?)?
		public Group getGroup() { return cGroup; }

		//{XdocFile}
		public Action getXdocFileAction_0() { return cXdocFileAction_0; }

		//WS?
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//MULTI_NL?
		public RuleCall getMULTI_NLTerminalRuleCall_2() { return cMULTI_NLTerminalRuleCall_2; }

		//(mainSection=(Document | Part | Chapter | Section | Section2) MULTI_NL?)?
		public Group getGroup_3() { return cGroup_3; }

		//mainSection=(Document | Part | Chapter | Section | Section2)
		public Assignment getMainSectionAssignment_3_0() { return cMainSectionAssignment_3_0; }

		//Document | Part | Chapter | Section | Section2
		public Alternatives getMainSectionAlternatives_3_0_0() { return cMainSectionAlternatives_3_0_0; }

		//Document
		public RuleCall getMainSectionDocumentParserRuleCall_3_0_0_0() { return cMainSectionDocumentParserRuleCall_3_0_0_0; }

		//Part
		public RuleCall getMainSectionPartParserRuleCall_3_0_0_1() { return cMainSectionPartParserRuleCall_3_0_0_1; }

		//Chapter
		public RuleCall getMainSectionChapterParserRuleCall_3_0_0_2() { return cMainSectionChapterParserRuleCall_3_0_0_2; }

		//Section
		public RuleCall getMainSectionSectionParserRuleCall_3_0_0_3() { return cMainSectionSectionParserRuleCall_3_0_0_3; }

		//Section2
		public RuleCall getMainSectionSection2ParserRuleCall_3_0_0_4() { return cMainSectionSection2ParserRuleCall_3_0_0_4; }

		//MULTI_NL?
		public RuleCall getMULTI_NLTerminalRuleCall_3_1() { return cMULTI_NLTerminalRuleCall_3_1; }
	}

	public class DocumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Document");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cDocumentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleTextOrMarkupParserRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cMULTI_NLTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Keyword cSubtitleKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cSubtitleAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cSubtitleTextOrMarkupParserRuleCall_3_2_0 = (RuleCall)cSubtitleAssignment_3_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cMULTI_NLTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Keyword cAuthorsKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAuthorsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAuthorsTextOrMarkupParserRuleCall_4_2_0 = (RuleCall)cAuthorsAssignment_4_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final RuleCall cMULTI_NLTerminalRuleCall_5_0 = (RuleCall)cGroup_5.eContents().get(0);
		private final Assignment cLangDefsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLangDefsLangDefParserRuleCall_5_1_0 = (RuleCall)cLangDefsAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final RuleCall cMULTI_NLTerminalRuleCall_6_0 = (RuleCall)cGroup_6.eContents().get(0);
		private final Assignment cGlossaryAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cGlossaryGlossaryParserRuleCall_6_1_0 = (RuleCall)cGlossaryAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cMULTI_NLTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Alternatives cAlternatives_7_1 = (Alternatives)cGroup_7.eContents().get(1);
		private final Group cGroup_7_1_0 = (Group)cAlternatives_7_1.eContents().get(0);
		private final Assignment cChaptersAssignment_7_1_0_0 = (Assignment)cGroup_7_1_0.eContents().get(0);
		private final RuleCall cChaptersChapterParserRuleCall_7_1_0_0_0 = (RuleCall)cChaptersAssignment_7_1_0_0.eContents().get(0);
		private final Group cGroup_7_1_0_1 = (Group)cGroup_7_1_0.eContents().get(1);
		private final RuleCall cMULTI_NLTerminalRuleCall_7_1_0_1_0 = (RuleCall)cGroup_7_1_0_1.eContents().get(0);
		private final Assignment cChaptersAssignment_7_1_0_1_1 = (Assignment)cGroup_7_1_0_1.eContents().get(1);
		private final RuleCall cChaptersChapterParserRuleCall_7_1_0_1_1_0 = (RuleCall)cChaptersAssignment_7_1_0_1_1.eContents().get(0);
		private final Group cGroup_7_1_1 = (Group)cAlternatives_7_1.eContents().get(1);
		private final Assignment cPartsAssignment_7_1_1_0 = (Assignment)cGroup_7_1_1.eContents().get(0);
		private final RuleCall cPartsPartParserRuleCall_7_1_1_0_0 = (RuleCall)cPartsAssignment_7_1_1_0.eContents().get(0);
		private final Group cGroup_7_1_1_1 = (Group)cGroup_7_1_1.eContents().get(1);
		private final RuleCall cMULTI_NLTerminalRuleCall_7_1_1_1_0 = (RuleCall)cGroup_7_1_1_1.eContents().get(0);
		private final Assignment cPartsAssignment_7_1_1_1_1 = (Assignment)cGroup_7_1_1_1.eContents().get(1);
		private final RuleCall cPartsPartParserRuleCall_7_1_1_1_1_0 = (RuleCall)cPartsAssignment_7_1_1_1_1.eContents().get(0);
		
		//Document:
		//
		//	"document[" title=TextOrMarkup "]" (MULTI_NL "subtitle[" subtitle=TextOrMarkup "]")? (MULTI_NL "authors["
		//
		//	authors=TextOrMarkup "]")? (MULTI_NL langDefs+=LangDef)* (MULTI_NL glossary=Glossary)? (MULTI_NL (chapters+=Chapter
		//
		//	(MULTI_NL chapters+=Chapter)* | parts+=Part (MULTI_NL parts+=Part)*)?);
		public ParserRule getRule() { return rule; }

		//"document[" title=TextOrMarkup "]" (MULTI_NL "subtitle[" subtitle=TextOrMarkup "]")? (MULTI_NL "authors["
		//
		//authors=TextOrMarkup "]")? (MULTI_NL langDefs+=LangDef)* (MULTI_NL glossary=Glossary)? (MULTI_NL (chapters+=Chapter
		//
		//(MULTI_NL chapters+=Chapter)* | parts+=Part (MULTI_NL parts+=Part)*)?)
		public Group getGroup() { return cGroup; }

		//"document["
		public Keyword getDocumentKeyword_0() { return cDocumentKeyword_0; }

		//title=TextOrMarkup
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//TextOrMarkup
		public RuleCall getTitleTextOrMarkupParserRuleCall_1_0() { return cTitleTextOrMarkupParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }

		//(MULTI_NL "subtitle[" subtitle=TextOrMarkup "]")?
		public Group getGroup_3() { return cGroup_3; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_3_0() { return cMULTI_NLTerminalRuleCall_3_0; }

		//"subtitle["
		public Keyword getSubtitleKeyword_3_1() { return cSubtitleKeyword_3_1; }

		//subtitle=TextOrMarkup
		public Assignment getSubtitleAssignment_3_2() { return cSubtitleAssignment_3_2; }

		//TextOrMarkup
		public RuleCall getSubtitleTextOrMarkupParserRuleCall_3_2_0() { return cSubtitleTextOrMarkupParserRuleCall_3_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_3() { return cRightSquareBracketKeyword_3_3; }

		//(MULTI_NL "authors[" authors=TextOrMarkup "]")?
		public Group getGroup_4() { return cGroup_4; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_4_0() { return cMULTI_NLTerminalRuleCall_4_0; }

		//"authors["
		public Keyword getAuthorsKeyword_4_1() { return cAuthorsKeyword_4_1; }

		//authors=TextOrMarkup
		public Assignment getAuthorsAssignment_4_2() { return cAuthorsAssignment_4_2; }

		//TextOrMarkup
		public RuleCall getAuthorsTextOrMarkupParserRuleCall_4_2_0() { return cAuthorsTextOrMarkupParserRuleCall_4_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_3() { return cRightSquareBracketKeyword_4_3; }

		//(MULTI_NL langDefs+=LangDef)*
		public Group getGroup_5() { return cGroup_5; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_5_0() { return cMULTI_NLTerminalRuleCall_5_0; }

		//langDefs+=LangDef
		public Assignment getLangDefsAssignment_5_1() { return cLangDefsAssignment_5_1; }

		//LangDef
		public RuleCall getLangDefsLangDefParserRuleCall_5_1_0() { return cLangDefsLangDefParserRuleCall_5_1_0; }

		//(MULTI_NL glossary=Glossary)?
		public Group getGroup_6() { return cGroup_6; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_6_0() { return cMULTI_NLTerminalRuleCall_6_0; }

		//glossary=Glossary
		public Assignment getGlossaryAssignment_6_1() { return cGlossaryAssignment_6_1; }

		//Glossary
		public RuleCall getGlossaryGlossaryParserRuleCall_6_1_0() { return cGlossaryGlossaryParserRuleCall_6_1_0; }

		//MULTI_NL (chapters+=Chapter (MULTI_NL chapters+=Chapter)* | parts+=Part (MULTI_NL parts+=Part)*)?
		public Group getGroup_7() { return cGroup_7; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_7_0() { return cMULTI_NLTerminalRuleCall_7_0; }

		//(chapters+=Chapter (MULTI_NL chapters+=Chapter)* | parts+=Part (MULTI_NL parts+=Part)*)?
		public Alternatives getAlternatives_7_1() { return cAlternatives_7_1; }

		//chapters+=Chapter (MULTI_NL chapters+=Chapter)*
		public Group getGroup_7_1_0() { return cGroup_7_1_0; }

		//chapters+=Chapter
		public Assignment getChaptersAssignment_7_1_0_0() { return cChaptersAssignment_7_1_0_0; }

		//Chapter
		public RuleCall getChaptersChapterParserRuleCall_7_1_0_0_0() { return cChaptersChapterParserRuleCall_7_1_0_0_0; }

		//(MULTI_NL chapters+=Chapter)*
		public Group getGroup_7_1_0_1() { return cGroup_7_1_0_1; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_7_1_0_1_0() { return cMULTI_NLTerminalRuleCall_7_1_0_1_0; }

		//chapters+=Chapter
		public Assignment getChaptersAssignment_7_1_0_1_1() { return cChaptersAssignment_7_1_0_1_1; }

		//Chapter
		public RuleCall getChaptersChapterParserRuleCall_7_1_0_1_1_0() { return cChaptersChapterParserRuleCall_7_1_0_1_1_0; }

		//parts+=Part (MULTI_NL parts+=Part)*
		public Group getGroup_7_1_1() { return cGroup_7_1_1; }

		//parts+=Part
		public Assignment getPartsAssignment_7_1_1_0() { return cPartsAssignment_7_1_1_0; }

		//Part
		public RuleCall getPartsPartParserRuleCall_7_1_1_0_0() { return cPartsPartParserRuleCall_7_1_1_0_0; }

		//(MULTI_NL parts+=Part)*
		public Group getGroup_7_1_1_1() { return cGroup_7_1_1_1; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_7_1_1_1_0() { return cMULTI_NLTerminalRuleCall_7_1_1_1_0; }

		//parts+=Part
		public Assignment getPartsAssignment_7_1_1_1_1() { return cPartsAssignment_7_1_1_1_1; }

		//Part
		public RuleCall getPartsPartParserRuleCall_7_1_1_1_1_0() { return cPartsPartParserRuleCall_7_1_1_1_1_0; }
	}

	public class GlossaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Glossary");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cMULTI_NLTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cGlossaryEntryAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cGlossaryEntryGlossaryEntryParserRuleCall_1_0 = (RuleCall)cGlossaryEntryAssignment_1.eContents().get(0);
		
		//Glossary:
		//
		//	(MULTI_NL glossaryEntry+=GlossaryEntry)+;
		public ParserRule getRule() { return rule; }

		//(MULTI_NL glossaryEntry+=GlossaryEntry)+
		public Group getGroup() { return cGroup; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_0() { return cMULTI_NLTerminalRuleCall_0; }

		//glossaryEntry+=GlossaryEntry
		public Assignment getGlossaryEntryAssignment_1() { return cGlossaryEntryAssignment_1; }

		//GlossaryEntry
		public RuleCall getGlossaryEntryGlossaryEntryParserRuleCall_1_0() { return cGlossaryEntryGlossaryEntryParserRuleCall_1_0; }
	}

	public class PartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Part");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPartRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cPartKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0_1_0 = (RuleCall)cNameAssignment_1_0_0_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_0_0_2 = (Keyword)cGroup_1_0_0.eContents().get(2);
		private final Keyword cPartKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Assignment cTitleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTitleTextOrMarkupParserRuleCall_1_1_0 = (RuleCall)cTitleAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final RuleCall cMULTI_NLTerminalRuleCall_1_3_0 = (RuleCall)cGroup_1_3.eContents().get(0);
		private final Assignment cChaptersAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cChaptersChapterParserRuleCall_1_3_1_0 = (RuleCall)cChaptersAssignment_1_3_1.eContents().get(0);
		
		//Part:
		//
		//	PartRef | ("part:" name=ID "[" | "part[") title=TextOrMarkup "]" (MULTI_NL chapters+=Chapter)*;
		public ParserRule getRule() { return rule; }

		//PartRef | ("part:" name=ID "[" | "part[") title=TextOrMarkup "]" (MULTI_NL chapters+=Chapter)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//PartRef
		public RuleCall getPartRefParserRuleCall_0() { return cPartRefParserRuleCall_0; }

		//("part:" name=ID "[" | "part[") title=TextOrMarkup "]" (MULTI_NL chapters+=Chapter)*
		public Group getGroup_1() { return cGroup_1; }

		//"part:" name=ID "[" | "part["
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//"part:" name=ID "["
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//"part:"
		public Keyword getPartKeyword_1_0_0_0() { return cPartKeyword_1_0_0_0; }

		//name=ID
		public Assignment getNameAssignment_1_0_0_1() { return cNameAssignment_1_0_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0_1_0() { return cNameIDTerminalRuleCall_1_0_0_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0_0_2() { return cLeftSquareBracketKeyword_1_0_0_2; }

		//"part["
		public Keyword getPartKeyword_1_0_1() { return cPartKeyword_1_0_1; }

		//title=TextOrMarkup
		public Assignment getTitleAssignment_1_1() { return cTitleAssignment_1_1; }

		//TextOrMarkup
		public RuleCall getTitleTextOrMarkupParserRuleCall_1_1_0() { return cTitleTextOrMarkupParserRuleCall_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }

		//(MULTI_NL chapters+=Chapter)*
		public Group getGroup_1_3() { return cGroup_1_3; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1_3_0() { return cMULTI_NLTerminalRuleCall_1_3_0; }

		//chapters+=Chapter
		public Assignment getChaptersAssignment_1_3_1() { return cChaptersAssignment_1_3_1; }

		//Chapter
		public RuleCall getChaptersChapterParserRuleCall_1_3_1_0() { return cChaptersChapterParserRuleCall_1_3_1_0; }
	}

	public class PartRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PartRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPartRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPartAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPartPartCrossReference_1_0 = (CrossReference)cPartAssignment_1.eContents().get(0);
		private final RuleCall cPartPartIDTerminalRuleCall_1_0_1 = (RuleCall)cPartPartCrossReference_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PartRef:
		//
		//	"part-ref[" part=[Part] "]";
		public ParserRule getRule() { return rule; }

		//"part-ref[" part=[Part] "]"
		public Group getGroup() { return cGroup; }

		//"part-ref["
		public Keyword getPartRefKeyword_0() { return cPartRefKeyword_0; }

		//part=[Part]
		public Assignment getPartAssignment_1() { return cPartAssignment_1; }

		//[Part]
		public CrossReference getPartPartCrossReference_1_0() { return cPartPartCrossReference_1_0; }

		//ID
		public RuleCall getPartPartIDTerminalRuleCall_1_0_1() { return cPartPartIDTerminalRuleCall_1_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class GlossaryEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "GlossaryEntry");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGlossEntryKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameUnpunctTextParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Assignment cAliasAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cAliasUnpunctTextParserRuleCall_2_2_0 = (RuleCall)cAliasAssignment_2_2.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_2_3 = (RuleCall)cGroup_2.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cANY_WSParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cDescriptionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cDescriptionTextOrMarkupParserRuleCall_6_0 = (RuleCall)cDescriptionAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final RuleCall cMULTI_NLTerminalRuleCall_7_0 = (RuleCall)cGroup_7.eContents().get(0);
		private final Assignment cDescriptionAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cDescriptionTextOrMarkupParserRuleCall_7_1_0 = (RuleCall)cDescriptionAssignment_7_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//GlossaryEntry:
		//
		//	"gloss-entry[" name=UnpunctText ("," ANY_WS* alias+=UnpunctText ANY_WS*)* "]" ANY_WS* "[" description+=TextOrMarkup
		//
		//	(MULTI_NL description+=TextOrMarkup)* "]";
		public ParserRule getRule() { return rule; }

		//"gloss-entry[" name=UnpunctText ("," ANY_WS* alias+=UnpunctText ANY_WS*)* "]" ANY_WS* "[" description+=TextOrMarkup
		//
		//(MULTI_NL description+=TextOrMarkup)* "]"
		public Group getGroup() { return cGroup; }

		//"gloss-entry["
		public Keyword getGlossEntryKeyword_0() { return cGlossEntryKeyword_0; }

		//name=UnpunctText
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//UnpunctText
		public RuleCall getNameUnpunctTextParserRuleCall_1_0() { return cNameUnpunctTextParserRuleCall_1_0; }

		//("," ANY_WS* alias+=UnpunctText ANY_WS*)*
		public Group getGroup_2() { return cGroup_2; }

		//","
		public Keyword getCommaKeyword_2_0() { return cCommaKeyword_2_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_1() { return cANY_WSParserRuleCall_2_1; }

		//alias+=UnpunctText
		public Assignment getAliasAssignment_2_2() { return cAliasAssignment_2_2; }

		//UnpunctText
		public RuleCall getAliasUnpunctTextParserRuleCall_2_2_0() { return cAliasUnpunctTextParserRuleCall_2_2_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_3() { return cANY_WSParserRuleCall_2_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_4() { return cANY_WSParserRuleCall_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//description+=TextOrMarkup
		public Assignment getDescriptionAssignment_6() { return cDescriptionAssignment_6; }

		//TextOrMarkup
		public RuleCall getDescriptionTextOrMarkupParserRuleCall_6_0() { return cDescriptionTextOrMarkupParserRuleCall_6_0; }

		//(MULTI_NL description+=TextOrMarkup)*
		public Group getGroup_7() { return cGroup_7; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_7_0() { return cMULTI_NLTerminalRuleCall_7_0; }

		//description+=TextOrMarkup
		public Assignment getDescriptionAssignment_7_1() { return cDescriptionAssignment_7_1; }

		//TextOrMarkup
		public RuleCall getDescriptionTextOrMarkupParserRuleCall_7_1_0() { return cDescriptionTextOrMarkupParserRuleCall_7_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
	}

	public class ChapterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Chapter");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cChapterRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cChapterKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0_1_0 = (RuleCall)cNameAssignment_1_0_0_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_0_0_2 = (Keyword)cGroup_1_0_0.eContents().get(2);
		private final Keyword cChapterKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Assignment cTitleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTitleTextOrMarkupParserRuleCall_1_1_0 = (RuleCall)cTitleAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final RuleCall cMULTI_NLTerminalRuleCall_1_3_0 = (RuleCall)cGroup_1_3.eContents().get(0);
		private final Assignment cContentsAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_1_3_1_0 = (RuleCall)cContentsAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final RuleCall cMULTI_NLTerminalRuleCall_1_4_0 = (RuleCall)cGroup_1_4.eContents().get(0);
		private final Assignment cSubSectionsAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cSubSectionsSectionParserRuleCall_1_4_1_0 = (RuleCall)cSubSectionsAssignment_1_4_1.eContents().get(0);
		
		//Chapter:
		//
		//	ChapterRef | ("chapter:" name=ID "[" | "chapter[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*
		//
		//	(MULTI_NL subSections+=Section)*;
		public ParserRule getRule() { return rule; }

		//ChapterRef | ("chapter:" name=ID "[" | "chapter[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)* (MULTI_NL
		//
		//subSections+=Section)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//ChapterRef
		public RuleCall getChapterRefParserRuleCall_0() { return cChapterRefParserRuleCall_0; }

		//("chapter:" name=ID "[" | "chapter[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)* (MULTI_NL
		//
		//subSections+=Section)*
		public Group getGroup_1() { return cGroup_1; }

		//"chapter:" name=ID "[" | "chapter["
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//"chapter:" name=ID "["
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//"chapter:"
		public Keyword getChapterKeyword_1_0_0_0() { return cChapterKeyword_1_0_0_0; }

		//name=ID
		public Assignment getNameAssignment_1_0_0_1() { return cNameAssignment_1_0_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0_1_0() { return cNameIDTerminalRuleCall_1_0_0_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0_0_2() { return cLeftSquareBracketKeyword_1_0_0_2; }

		//"chapter["
		public Keyword getChapterKeyword_1_0_1() { return cChapterKeyword_1_0_1; }

		//title=TextOrMarkup
		public Assignment getTitleAssignment_1_1() { return cTitleAssignment_1_1; }

		//TextOrMarkup
		public RuleCall getTitleTextOrMarkupParserRuleCall_1_1_0() { return cTitleTextOrMarkupParserRuleCall_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }

		//(MULTI_NL contents+=TextOrMarkup)*
		public Group getGroup_1_3() { return cGroup_1_3; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1_3_0() { return cMULTI_NLTerminalRuleCall_1_3_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_1_3_1() { return cContentsAssignment_1_3_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_1_3_1_0() { return cContentsTextOrMarkupParserRuleCall_1_3_1_0; }

		//(MULTI_NL subSections+=Section)*
		public Group getGroup_1_4() { return cGroup_1_4; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1_4_0() { return cMULTI_NLTerminalRuleCall_1_4_0; }

		//subSections+=Section
		public Assignment getSubSectionsAssignment_1_4_1() { return cSubSectionsAssignment_1_4_1; }

		//Section
		public RuleCall getSubSectionsSectionParserRuleCall_1_4_1_0() { return cSubSectionsSectionParserRuleCall_1_4_1_0; }
	}

	public class ChapterRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ChapterRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChapterRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cChapterAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cChapterChapterCrossReference_1_0 = (CrossReference)cChapterAssignment_1.eContents().get(0);
		private final RuleCall cChapterChapterIDTerminalRuleCall_1_0_1 = (RuleCall)cChapterChapterCrossReference_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ChapterRef:
		//
		//	"chapter-ref[" chapter=[Chapter] "]";
		public ParserRule getRule() { return rule; }

		//"chapter-ref[" chapter=[Chapter] "]"
		public Group getGroup() { return cGroup; }

		//"chapter-ref["
		public Keyword getChapterRefKeyword_0() { return cChapterRefKeyword_0; }

		//chapter=[Chapter]
		public Assignment getChapterAssignment_1() { return cChapterAssignment_1; }

		//[Chapter]
		public CrossReference getChapterChapterCrossReference_1_0() { return cChapterChapterCrossReference_1_0; }

		//ID
		public RuleCall getChapterChapterIDTerminalRuleCall_1_0_1() { return cChapterChapterIDTerminalRuleCall_1_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class SectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSectionRefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cSectionKeyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0_1_0 = (RuleCall)cNameAssignment_1_0_0_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_0_0_2 = (Keyword)cGroup_1_0_0.eContents().get(2);
		private final Keyword cSectionKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Assignment cTitleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTitleTextOrMarkupParserRuleCall_1_1_0 = (RuleCall)cTitleAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final RuleCall cMULTI_NLTerminalRuleCall_1_3_0 = (RuleCall)cGroup_1_3.eContents().get(0);
		private final Assignment cContentsAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_1_3_1_0 = (RuleCall)cContentsAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final RuleCall cMULTI_NLTerminalRuleCall_1_4_0 = (RuleCall)cGroup_1_4.eContents().get(0);
		private final Assignment cSubSectionsAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cSubSectionsSection2ParserRuleCall_1_4_1_0 = (RuleCall)cSubSectionsAssignment_1_4_1.eContents().get(0);
		
		//Section:
		//
		//	SectionRef | ("section:" name=ID "[" | "section[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*
		//
		//	(MULTI_NL subSections+=Section2)*;
		public ParserRule getRule() { return rule; }

		//SectionRef | ("section:" name=ID "[" | "section[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)* (MULTI_NL
		//
		//subSections+=Section2)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//SectionRef
		public RuleCall getSectionRefParserRuleCall_0() { return cSectionRefParserRuleCall_0; }

		//("section:" name=ID "[" | "section[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)* (MULTI_NL
		//
		//subSections+=Section2)*
		public Group getGroup_1() { return cGroup_1; }

		//"section:" name=ID "[" | "section["
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//"section:" name=ID "["
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//"section:"
		public Keyword getSectionKeyword_1_0_0_0() { return cSectionKeyword_1_0_0_0; }

		//name=ID
		public Assignment getNameAssignment_1_0_0_1() { return cNameAssignment_1_0_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0_1_0() { return cNameIDTerminalRuleCall_1_0_0_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0_0_2() { return cLeftSquareBracketKeyword_1_0_0_2; }

		//"section["
		public Keyword getSectionKeyword_1_0_1() { return cSectionKeyword_1_0_1; }

		//title=TextOrMarkup
		public Assignment getTitleAssignment_1_1() { return cTitleAssignment_1_1; }

		//TextOrMarkup
		public RuleCall getTitleTextOrMarkupParserRuleCall_1_1_0() { return cTitleTextOrMarkupParserRuleCall_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }

		//(MULTI_NL contents+=TextOrMarkup)*
		public Group getGroup_1_3() { return cGroup_1_3; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1_3_0() { return cMULTI_NLTerminalRuleCall_1_3_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_1_3_1() { return cContentsAssignment_1_3_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_1_3_1_0() { return cContentsTextOrMarkupParserRuleCall_1_3_1_0; }

		//(MULTI_NL subSections+=Section2)*
		public Group getGroup_1_4() { return cGroup_1_4; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1_4_0() { return cMULTI_NLTerminalRuleCall_1_4_0; }

		//subSections+=Section2
		public Assignment getSubSectionsAssignment_1_4_1() { return cSubSectionsAssignment_1_4_1; }

		//Section2
		public RuleCall getSubSectionsSection2ParserRuleCall_1_4_1_0() { return cSubSectionsSection2ParserRuleCall_1_4_1_0; }
	}

	public class SectionRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SectionRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSectionRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSectionSectionCrossReference_1_0 = (CrossReference)cSectionAssignment_1.eContents().get(0);
		private final RuleCall cSectionSectionIDTerminalRuleCall_1_0_1 = (RuleCall)cSectionSectionCrossReference_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//SectionRef:
		//
		//	"section-ref[" section=[Section] "]";
		public ParserRule getRule() { return rule; }

		//"section-ref[" section=[Section] "]"
		public Group getGroup() { return cGroup; }

		//"section-ref["
		public Keyword getSectionRefKeyword_0() { return cSectionRefKeyword_0; }

		//section=[Section]
		public Assignment getSectionAssignment_1() { return cSectionAssignment_1; }

		//[Section]
		public CrossReference getSectionSectionCrossReference_1_0() { return cSectionSectionCrossReference_1_0; }

		//ID
		public RuleCall getSectionSectionIDTerminalRuleCall_1_0_1() { return cSectionSectionIDTerminalRuleCall_1_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class Section2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section2");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSection2RefParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Group cGroup_1_0_0 = (Group)cAlternatives_1_0.eContents().get(0);
		private final Keyword cSection2Keyword_1_0_0_0 = (Keyword)cGroup_1_0_0.eContents().get(0);
		private final Assignment cNameAssignment_1_0_0_1 = (Assignment)cGroup_1_0_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0_0_1_0 = (RuleCall)cNameAssignment_1_0_0_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1_0_0_2 = (Keyword)cGroup_1_0_0.eContents().get(2);
		private final Keyword cSection2Keyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final Assignment cTitleAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTitleTextOrMarkupParserRuleCall_1_1_0 = (RuleCall)cTitleAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_1_3 = (Group)cGroup_1.eContents().get(3);
		private final RuleCall cMULTI_NLTerminalRuleCall_1_3_0 = (RuleCall)cGroup_1_3.eContents().get(0);
		private final Assignment cContentsAssignment_1_3_1 = (Assignment)cGroup_1_3.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_1_3_1_0 = (RuleCall)cContentsAssignment_1_3_1.eContents().get(0);
		private final Group cGroup_1_4 = (Group)cGroup_1.eContents().get(4);
		private final RuleCall cMULTI_NLTerminalRuleCall_1_4_0 = (RuleCall)cGroup_1_4.eContents().get(0);
		private final Assignment cSubSectionsAssignment_1_4_1 = (Assignment)cGroup_1_4.eContents().get(1);
		private final RuleCall cSubSectionsSection3ParserRuleCall_1_4_1_0 = (RuleCall)cSubSectionsAssignment_1_4_1.eContents().get(0);
		
		//Section2:
		//
		//	Section2Ref | ("section2:" name=ID "[" | "section2[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*
		//
		//	(MULTI_NL subSections+=Section3)*;
		public ParserRule getRule() { return rule; }

		//Section2Ref | ("section2:" name=ID "[" | "section2[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*
		//
		//(MULTI_NL subSections+=Section3)*
		public Alternatives getAlternatives() { return cAlternatives; }

		//Section2Ref
		public RuleCall getSection2RefParserRuleCall_0() { return cSection2RefParserRuleCall_0; }

		//("section2:" name=ID "[" | "section2[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)* (MULTI_NL
		//
		//subSections+=Section3)*
		public Group getGroup_1() { return cGroup_1; }

		//"section2:" name=ID "[" | "section2["
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//"section2:" name=ID "["
		public Group getGroup_1_0_0() { return cGroup_1_0_0; }

		//"section2:"
		public Keyword getSection2Keyword_1_0_0_0() { return cSection2Keyword_1_0_0_0; }

		//name=ID
		public Assignment getNameAssignment_1_0_0_1() { return cNameAssignment_1_0_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0_0_1_0() { return cNameIDTerminalRuleCall_1_0_0_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0_0_2() { return cLeftSquareBracketKeyword_1_0_0_2; }

		//"section2["
		public Keyword getSection2Keyword_1_0_1() { return cSection2Keyword_1_0_1; }

		//title=TextOrMarkup
		public Assignment getTitleAssignment_1_1() { return cTitleAssignment_1_1; }

		//TextOrMarkup
		public RuleCall getTitleTextOrMarkupParserRuleCall_1_1_0() { return cTitleTextOrMarkupParserRuleCall_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }

		//(MULTI_NL contents+=TextOrMarkup)*
		public Group getGroup_1_3() { return cGroup_1_3; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1_3_0() { return cMULTI_NLTerminalRuleCall_1_3_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_1_3_1() { return cContentsAssignment_1_3_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_1_3_1_0() { return cContentsTextOrMarkupParserRuleCall_1_3_1_0; }

		//(MULTI_NL subSections+=Section3)*
		public Group getGroup_1_4() { return cGroup_1_4; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1_4_0() { return cMULTI_NLTerminalRuleCall_1_4_0; }

		//subSections+=Section3
		public Assignment getSubSectionsAssignment_1_4_1() { return cSubSectionsAssignment_1_4_1; }

		//Section3
		public RuleCall getSubSectionsSection3ParserRuleCall_1_4_1_0() { return cSubSectionsSection3ParserRuleCall_1_4_1_0; }
	}

	public class Section2RefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section2Ref");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSection2RefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cSection2Assignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSection2Section2CrossReference_1_0 = (CrossReference)cSection2Assignment_1.eContents().get(0);
		private final RuleCall cSection2Section2IDTerminalRuleCall_1_0_1 = (RuleCall)cSection2Section2CrossReference_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Section2Ref:
		//
		//	"section2-ref[" section2=[Section2] "]";
		public ParserRule getRule() { return rule; }

		//"section2-ref[" section2=[Section2] "]"
		public Group getGroup() { return cGroup; }

		//"section2-ref["
		public Keyword getSection2RefKeyword_0() { return cSection2RefKeyword_0; }

		//section2=[Section2]
		public Assignment getSection2Assignment_1() { return cSection2Assignment_1; }

		//[Section2]
		public CrossReference getSection2Section2CrossReference_1_0() { return cSection2Section2CrossReference_1_0; }

		//ID
		public RuleCall getSection2Section2IDTerminalRuleCall_1_0_1() { return cSection2Section2IDTerminalRuleCall_1_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class Section3Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section3");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cSection3Keyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_0_1_0 = (RuleCall)cNameAssignment_0_0_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Keyword cSection3Keyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleTextOrMarkupParserRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cMULTI_NLTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cContentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_3_1_0 = (RuleCall)cContentsAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final RuleCall cMULTI_NLTerminalRuleCall_4_0 = (RuleCall)cGroup_4.eContents().get(0);
		private final Assignment cSubSectionsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSubSectionsSection4ParserRuleCall_4_1_0 = (RuleCall)cSubSectionsAssignment_4_1.eContents().get(0);
		
		//Section3:
		//
		//	("section3:" name=ID "[" | "section3[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)* (MULTI_NL
		//
		//	subSections+=Section4)*;
		public ParserRule getRule() { return rule; }

		//("section3:" name=ID "[" | "section3[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)* (MULTI_NL
		//
		//subSections+=Section4)*
		public Group getGroup() { return cGroup; }

		//"section3:" name=ID "[" | "section3["
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"section3:" name=ID "["
		public Group getGroup_0_0() { return cGroup_0_0; }

		//"section3:"
		public Keyword getSection3Keyword_0_0_0() { return cSection3Keyword_0_0_0; }

		//name=ID
		public Assignment getNameAssignment_0_0_1() { return cNameAssignment_0_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_1_0() { return cNameIDTerminalRuleCall_0_0_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_0_2() { return cLeftSquareBracketKeyword_0_0_2; }

		//"section3["
		public Keyword getSection3Keyword_0_1() { return cSection3Keyword_0_1; }

		//title=TextOrMarkup
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//TextOrMarkup
		public RuleCall getTitleTextOrMarkupParserRuleCall_1_0() { return cTitleTextOrMarkupParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }

		//(MULTI_NL contents+=TextOrMarkup)*
		public Group getGroup_3() { return cGroup_3; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_3_0() { return cMULTI_NLTerminalRuleCall_3_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_3_1() { return cContentsAssignment_3_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_3_1_0() { return cContentsTextOrMarkupParserRuleCall_3_1_0; }

		//(MULTI_NL subSections+=Section4)*
		public Group getGroup_4() { return cGroup_4; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_4_0() { return cMULTI_NLTerminalRuleCall_4_0; }

		//subSections+=Section4
		public Assignment getSubSectionsAssignment_4_1() { return cSubSectionsAssignment_4_1; }

		//Section4
		public RuleCall getSubSectionsSection4ParserRuleCall_4_1_0() { return cSubSectionsSection4ParserRuleCall_4_1_0; }
	}

	public class Section4Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Section4");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cSection4Keyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final Assignment cNameAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_0_1_0 = (RuleCall)cNameAssignment_0_0_1.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Keyword cSection4Keyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleTextOrMarkupParserRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final RuleCall cMULTI_NLTerminalRuleCall_3_0 = (RuleCall)cGroup_3.eContents().get(0);
		private final Assignment cContentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_3_1_0 = (RuleCall)cContentsAssignment_3_1.eContents().get(0);
		
		//Section4:
		//
		//	("section4:" name=ID "[" | "section4[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*;
		public ParserRule getRule() { return rule; }

		//("section4:" name=ID "[" | "section4[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*
		public Group getGroup() { return cGroup; }

		//"section4:" name=ID "[" | "section4["
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"section4:" name=ID "["
		public Group getGroup_0_0() { return cGroup_0_0; }

		//"section4:"
		public Keyword getSection4Keyword_0_0_0() { return cSection4Keyword_0_0_0; }

		//name=ID
		public Assignment getNameAssignment_0_0_1() { return cNameAssignment_0_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_1_0() { return cNameIDTerminalRuleCall_0_0_1_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_0_2() { return cLeftSquareBracketKeyword_0_0_2; }

		//"section4["
		public Keyword getSection4Keyword_0_1() { return cSection4Keyword_0_1; }

		//title=TextOrMarkup
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//TextOrMarkup
		public RuleCall getTitleTextOrMarkupParserRuleCall_1_0() { return cTitleTextOrMarkupParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }

		//(MULTI_NL contents+=TextOrMarkup)*
		public Group getGroup_3() { return cGroup_3; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_3_0() { return cMULTI_NLTerminalRuleCall_3_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_3_1() { return cContentsAssignment_3_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_3_1_0() { return cContentsTextOrMarkupParserRuleCall_3_1_0; }
	}

	public class TextOrMarkupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextOrMarkup");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cContentsAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cContentsTextPartParserRuleCall_0_0_0 = (RuleCall)cContentsAssignment_0_0.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cGroup_0.eContents().get(1);
		private final Assignment cContentsAssignment_0_1_0 = (Assignment)cGroup_0_1.eContents().get(0);
		private final RuleCall cContentsMarkUpParserRuleCall_0_1_0_0 = (RuleCall)cContentsAssignment_0_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cContentsTextPartParserRuleCall_0_1_1_0 = (RuleCall)cContentsAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cContentsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cContentsMarkUpParserRuleCall_1_0_0 = (RuleCall)cContentsAssignment_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cContentsTextPartParserRuleCall_1_1_0 = (RuleCall)cContentsAssignment_1_1.eContents().get(0);
		
		//TextOrMarkup:
		//
		//	contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp contents+=TextPart?)+;
		public ParserRule getRule() { return rule; }

		//contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp contents+=TextPart?)+
		public Alternatives getAlternatives() { return cAlternatives; }

		//contents+=TextPart (contents+=MarkUp contents+=TextPart?)*
		public Group getGroup_0() { return cGroup_0; }

		//contents+=TextPart
		public Assignment getContentsAssignment_0_0() { return cContentsAssignment_0_0; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_0_0_0() { return cContentsTextPartParserRuleCall_0_0_0; }

		//(contents+=MarkUp contents+=TextPart?)*
		public Group getGroup_0_1() { return cGroup_0_1; }

		//contents+=MarkUp
		public Assignment getContentsAssignment_0_1_0() { return cContentsAssignment_0_1_0; }

		//MarkUp
		public RuleCall getContentsMarkUpParserRuleCall_0_1_0_0() { return cContentsMarkUpParserRuleCall_0_1_0_0; }

		//contents+=TextPart?
		public Assignment getContentsAssignment_0_1_1() { return cContentsAssignment_0_1_1; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_0_1_1_0() { return cContentsTextPartParserRuleCall_0_1_1_0; }

		//(contents+=MarkUp contents+=TextPart?)+
		public Group getGroup_1() { return cGroup_1; }

		//contents+=MarkUp
		public Assignment getContentsAssignment_1_0() { return cContentsAssignment_1_0; }

		//MarkUp
		public RuleCall getContentsMarkUpParserRuleCall_1_0_0() { return cContentsMarkUpParserRuleCall_1_0_0; }

		//contents+=TextPart?
		public Assignment getContentsAssignment_1_1() { return cContentsAssignment_1_1; }

		//TextPart
		public RuleCall getContentsTextPartParserRuleCall_1_1_0() { return cContentsTextPartParserRuleCall_1_1_0; }
	}

	public class TextPartElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextPart");
		private final Assignment cTextAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cTextTextParserRuleCall_0 = (RuleCall)cTextAssignment.eContents().get(0);
		
		//TextPart:
		//
		//	text=Text;
		public ParserRule getRule() { return rule; }

		//text=Text
		public Assignment getTextAssignment() { return cTextAssignment; }

		//Text
		public RuleCall getTextTextParserRuleCall_0() { return cTextTextParserRuleCall_0; }
	}

	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Text");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cWSTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cSINGLE_NLTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cANY_OTHERTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final Keyword cReverseSolidusLeftSquareBracketKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cReverseSolidusRightSquareBracketKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cCommaKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cHyphenMinusKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cReverseSolidusColonKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cReverseSolidusPercentSignKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		
		//Text:
		//
		//	(ID | WS | SINGLE_NL | ANY_OTHER | "\\[" | "\\]" | "," | "-" | "\\:" | "\\%")+;
		public ParserRule getRule() { return rule; }

		//(ID | WS | SINGLE_NL | ANY_OTHER | "\\[" | "\\]" | "," | "-" | "\\:" | "\\%")+
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//WS
		public RuleCall getWSTerminalRuleCall_1() { return cWSTerminalRuleCall_1; }

		//SINGLE_NL
		public RuleCall getSINGLE_NLTerminalRuleCall_2() { return cSINGLE_NLTerminalRuleCall_2; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_3() { return cANY_OTHERTerminalRuleCall_3; }

		//"\\["
		public Keyword getReverseSolidusLeftSquareBracketKeyword_4() { return cReverseSolidusLeftSquareBracketKeyword_4; }

		//"\\]"
		public Keyword getReverseSolidusRightSquareBracketKeyword_5() { return cReverseSolidusRightSquareBracketKeyword_5; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//"-"
		public Keyword getHyphenMinusKeyword_7() { return cHyphenMinusKeyword_7; }

		//"\\:"
		public Keyword getReverseSolidusColonKeyword_8() { return cReverseSolidusColonKeyword_8; }

		//"\\%"
		public Keyword getReverseSolidusPercentSignKeyword_9() { return cReverseSolidusPercentSignKeyword_9; }
	}

	public class UnpunctTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnpunctText");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cAlternatives_0.eContents().get(0);
		private final RuleCall cANY_OTHERTerminalRuleCall_0_1 = (RuleCall)cAlternatives_0.eContents().get(1);
		private final Keyword cReverseSolidusLeftSquareBracketKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Keyword cReverseSolidusRightSquareBracketKeyword_0_3 = (Keyword)cAlternatives_0.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_0_4 = (Keyword)cAlternatives_0.eContents().get(4);
		private final Keyword cReverseSolidusColonKeyword_0_5 = (Keyword)cAlternatives_0.eContents().get(5);
		private final Keyword cReverseSolidusPercentSignKeyword_0_6 = (Keyword)cAlternatives_0.eContents().get(6);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_1_0 = (RuleCall)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cANY_OTHERTerminalRuleCall_1_1_1 = (RuleCall)cAlternatives_1_1.eContents().get(1);
		private final Keyword cReverseSolidusLeftSquareBracketKeyword_1_1_2 = (Keyword)cAlternatives_1_1.eContents().get(2);
		private final Keyword cReverseSolidusRightSquareBracketKeyword_1_1_3 = (Keyword)cAlternatives_1_1.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_1_1_4 = (Keyword)cAlternatives_1_1.eContents().get(4);
		private final Keyword cReverseSolidusColonKeyword_1_1_5 = (Keyword)cAlternatives_1_1.eContents().get(5);
		private final Keyword cReverseSolidusPercentSignKeyword_1_1_6 = (Keyword)cAlternatives_1_1.eContents().get(6);
		
		//UnpunctText:
		//
		//	(ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%")+ (WS (ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%"))*;
		public ParserRule getRule() { return rule; }

		//(ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%")+ (WS (ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%"))*
		public Group getGroup() { return cGroup; }

		//(ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%")+
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_0_1() { return cANY_OTHERTerminalRuleCall_0_1; }

		//"\\["
		public Keyword getReverseSolidusLeftSquareBracketKeyword_0_2() { return cReverseSolidusLeftSquareBracketKeyword_0_2; }

		//"\\]"
		public Keyword getReverseSolidusRightSquareBracketKeyword_0_3() { return cReverseSolidusRightSquareBracketKeyword_0_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_0_4() { return cHyphenMinusKeyword_0_4; }

		//"\\:"
		public Keyword getReverseSolidusColonKeyword_0_5() { return cReverseSolidusColonKeyword_0_5; }

		//"\\%"
		public Keyword getReverseSolidusPercentSignKeyword_0_6() { return cReverseSolidusPercentSignKeyword_0_6; }

		//(WS (ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%"))*
		public Group getGroup_1() { return cGroup_1; }

		//WS
		public RuleCall getWSTerminalRuleCall_1_0() { return cWSTerminalRuleCall_1_0; }

		//ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%"
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1_0() { return cIDTerminalRuleCall_1_1_0; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_1_1_1() { return cANY_OTHERTerminalRuleCall_1_1_1; }

		//"\\["
		public Keyword getReverseSolidusLeftSquareBracketKeyword_1_1_2() { return cReverseSolidusLeftSquareBracketKeyword_1_1_2; }

		//"\\]"
		public Keyword getReverseSolidusRightSquareBracketKeyword_1_1_3() { return cReverseSolidusRightSquareBracketKeyword_1_1_3; }

		//"-"
		public Keyword getHyphenMinusKeyword_1_1_4() { return cHyphenMinusKeyword_1_1_4; }

		//"\\:"
		public Keyword getReverseSolidusColonKeyword_1_1_5() { return cReverseSolidusColonKeyword_1_1_5; }

		//"\\%"
		public Keyword getReverseSolidusPercentSignKeyword_1_1_6() { return cReverseSolidusPercentSignKeyword_1_1_6; }
	}

	public class MarkUpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MarkUp");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmphasizeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnchorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOrderedListParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cUnorderedListParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cCodeBlockParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cCodeRefParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cLinkParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cImageRefParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cTableParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cTodoParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		
		//MarkUp:
		//
		//	Emphasize | Anchor | Ref | OrderedList | UnorderedList | CodeBlock | CodeRef | Link | ImageRef | Table | Todo;
		public ParserRule getRule() { return rule; }

		//Emphasize | Anchor | Ref | OrderedList | UnorderedList | CodeBlock | CodeRef | Link | ImageRef | Table | Todo
		public Alternatives getAlternatives() { return cAlternatives; }

		//Emphasize
		public RuleCall getEmphasizeParserRuleCall_0() { return cEmphasizeParserRuleCall_0; }

		//Anchor
		public RuleCall getAnchorParserRuleCall_1() { return cAnchorParserRuleCall_1; }

		//Ref
		public RuleCall getRefParserRuleCall_2() { return cRefParserRuleCall_2; }

		//OrderedList
		public RuleCall getOrderedListParserRuleCall_3() { return cOrderedListParserRuleCall_3; }

		//UnorderedList
		public RuleCall getUnorderedListParserRuleCall_4() { return cUnorderedListParserRuleCall_4; }

		//CodeBlock
		public RuleCall getCodeBlockParserRuleCall_5() { return cCodeBlockParserRuleCall_5; }

		//CodeRef
		public RuleCall getCodeRefParserRuleCall_6() { return cCodeRefParserRuleCall_6; }

		//Link
		public RuleCall getLinkParserRuleCall_7() { return cLinkParserRuleCall_7; }

		//ImageRef
		public RuleCall getImageRefParserRuleCall_8() { return cImageRefParserRuleCall_8; }

		//Table
		public RuleCall getTableParserRuleCall_9() { return cTableParserRuleCall_9; }

		//Todo
		public RuleCall getTodoParserRuleCall_10() { return cTodoParserRuleCall_10; }
	}

	public class TableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Table");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cANY_WSParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cRowsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cRowsTableRowParserRuleCall_2_1_0 = (RuleCall)cRowsAssignment_2_1.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Table:
		//
		//	{Table} "table[" (ANY_WS* rows+=TableRow)* ANY_WS* "]";
		public ParserRule getRule() { return rule; }

		//{Table} "table[" (ANY_WS* rows+=TableRow)* ANY_WS* "]"
		public Group getGroup() { return cGroup; }

		//{Table}
		public Action getTableAction_0() { return cTableAction_0; }

		//"table["
		public Keyword getTableKeyword_1() { return cTableKeyword_1; }

		//(ANY_WS* rows+=TableRow)*
		public Group getGroup_2() { return cGroup_2; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_0() { return cANY_WSParserRuleCall_2_0; }

		//rows+=TableRow
		public Assignment getRowsAssignment_2_1() { return cRowsAssignment_2_1; }

		//TableRow
		public RuleCall getRowsTableRowParserRuleCall_2_1_0() { return cRowsTableRowParserRuleCall_2_1_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_3() { return cANY_WSParserRuleCall_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class TableRowElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TableRow");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableRowAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTrKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cANY_WSParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cDataAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDataTableDataParserRuleCall_2_1_0 = (RuleCall)cDataAssignment_2_1.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//TableRow:
		//
		//	{TableRow} "tr[" (ANY_WS* data+=TableData)* ANY_WS* "]";
		public ParserRule getRule() { return rule; }

		//{TableRow} "tr[" (ANY_WS* data+=TableData)* ANY_WS* "]"
		public Group getGroup() { return cGroup; }

		//{TableRow}
		public Action getTableRowAction_0() { return cTableRowAction_0; }

		//"tr["
		public Keyword getTrKeyword_1() { return cTrKeyword_1; }

		//(ANY_WS* data+=TableData)*
		public Group getGroup_2() { return cGroup_2; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_0() { return cANY_WSParserRuleCall_2_0; }

		//data+=TableData
		public Assignment getDataAssignment_2_1() { return cDataAssignment_2_1; }

		//TableData
		public RuleCall getDataTableDataParserRuleCall_2_1_0() { return cDataTableDataParserRuleCall_2_1_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_3() { return cANY_WSParserRuleCall_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class TableDataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TableData");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableDataAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTdKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cMULTI_NLTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cContentsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_2_1_0 = (RuleCall)cContentsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cMULTI_NLTerminalRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cContentsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_2_2_1_0 = (RuleCall)cContentsAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//TableData:
		//
		//	{TableData} "td[" (MULTI_NL? contents+=TextOrMarkup (MULTI_NL contents+=TextOrMarkup)*)? "]";
		public ParserRule getRule() { return rule; }

		//{TableData} "td[" (MULTI_NL? contents+=TextOrMarkup (MULTI_NL contents+=TextOrMarkup)*)? "]"
		public Group getGroup() { return cGroup; }

		//{TableData}
		public Action getTableDataAction_0() { return cTableDataAction_0; }

		//"td["
		public Keyword getTdKeyword_1() { return cTdKeyword_1; }

		//(MULTI_NL? contents+=TextOrMarkup (MULTI_NL contents+=TextOrMarkup)*)?
		public Group getGroup_2() { return cGroup_2; }

		//MULTI_NL?
		public RuleCall getMULTI_NLTerminalRuleCall_2_0() { return cMULTI_NLTerminalRuleCall_2_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_2_1() { return cContentsAssignment_2_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_2_1_0() { return cContentsTextOrMarkupParserRuleCall_2_1_0; }

		//(MULTI_NL contents+=TextOrMarkup)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_2_2_0() { return cMULTI_NLTerminalRuleCall_2_2_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_2_2_1() { return cContentsAssignment_2_2_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_2_2_1_0() { return cContentsTextOrMarkupParserRuleCall_2_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class EmphasizeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Emphasize");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEmphasizeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cEKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cMULTI_NLTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cContentsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_2_1_0 = (RuleCall)cContentsAssignment_2_1.eContents().get(0);
		private final RuleCall cMULTI_NLTerminalRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Emphasize:
		//
		//	{Emphasize} "e[" (MULTI_NL? contents+=TextOrMarkup MULTI_NL?)? "]";
		public ParserRule getRule() { return rule; }

		//{Emphasize} "e[" (MULTI_NL? contents+=TextOrMarkup MULTI_NL?)? "]"
		public Group getGroup() { return cGroup; }

		//{Emphasize}
		public Action getEmphasizeAction_0() { return cEmphasizeAction_0; }

		//"e["
		public Keyword getEKeyword_1() { return cEKeyword_1; }

		//(MULTI_NL? contents+=TextOrMarkup MULTI_NL?)?
		public Group getGroup_2() { return cGroup_2; }

		//MULTI_NL?
		public RuleCall getMULTI_NLTerminalRuleCall_2_0() { return cMULTI_NLTerminalRuleCall_2_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_2_1() { return cContentsAssignment_2_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_2_1_0() { return cContentsTextOrMarkupParserRuleCall_2_1_0; }

		//MULTI_NL?
		public RuleCall getMULTI_NLTerminalRuleCall_2_2() { return cMULTI_NLTerminalRuleCall_2_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class AnchorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Anchor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Anchor:
		//
		//	"a[" name=ID "]";
		public ParserRule getRule() { return rule; }

		//"a[" name=ID "]"
		public Group getGroup() { return cGroup; }

		//"a["
		public Keyword getAKeyword_0() { return cAKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class RefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Ref");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cRefIdentifiableCrossReference_1_0 = (CrossReference)cRefAssignment_1.eContents().get(0);
		private final RuleCall cRefIdentifiableIDTerminalRuleCall_1_0_1 = (RuleCall)cRefIdentifiableCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final RuleCall cMULTI_NLTerminalRuleCall_2_1 = (RuleCall)cGroup_2.eContents().get(1);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final Assignment cContentsAssignment_2_2_0 = (Assignment)cGroup_2_2.eContents().get(0);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_2_2_0_0 = (RuleCall)cContentsAssignment_2_2_0.eContents().get(0);
		private final RuleCall cMULTI_NLTerminalRuleCall_2_2_1 = (RuleCall)cGroup_2_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//Ref:
		//
		//	"ref:" ref=[Identifiable] ("[" MULTI_NL? (contents+=TextOrMarkup MULTI_NL?)? "]")?;
		public ParserRule getRule() { return rule; }

		//"ref:" ref=[Identifiable] ("[" MULTI_NL? (contents+=TextOrMarkup MULTI_NL?)? "]")?
		public Group getGroup() { return cGroup; }

		//"ref:"
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//ref=[Identifiable]
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }

		//[Identifiable]
		public CrossReference getRefIdentifiableCrossReference_1_0() { return cRefIdentifiableCrossReference_1_0; }

		//ID
		public RuleCall getRefIdentifiableIDTerminalRuleCall_1_0_1() { return cRefIdentifiableIDTerminalRuleCall_1_0_1; }

		//("[" MULTI_NL? (contents+=TextOrMarkup MULTI_NL?)? "]")?
		public Group getGroup_2() { return cGroup_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }

		//MULTI_NL?
		public RuleCall getMULTI_NLTerminalRuleCall_2_1() { return cMULTI_NLTerminalRuleCall_2_1; }

		//(contents+=TextOrMarkup MULTI_NL?)?
		public Group getGroup_2_2() { return cGroup_2_2; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_2_2_0() { return cContentsAssignment_2_2_0; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_2_2_0_0() { return cContentsTextOrMarkupParserRuleCall_2_2_0_0; }

		//MULTI_NL?
		public RuleCall getMULTI_NLTerminalRuleCall_2_2_1() { return cMULTI_NLTerminalRuleCall_2_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_3() { return cRightSquareBracketKeyword_2_3; }
	}

	public class OrderedListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrderedList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cOrderedListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cOlKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cANY_WSParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cItemsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cItemsItemParserRuleCall_2_1_0 = (RuleCall)cItemsAssignment_2_1.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//OrderedList:
		//
		//	{OrderedList} "ol[" (ANY_WS* items+=Item)* ANY_WS* "]";
		public ParserRule getRule() { return rule; }

		//{OrderedList} "ol[" (ANY_WS* items+=Item)* ANY_WS* "]"
		public Group getGroup() { return cGroup; }

		//{OrderedList}
		public Action getOrderedListAction_0() { return cOrderedListAction_0; }

		//"ol["
		public Keyword getOlKeyword_1() { return cOlKeyword_1; }

		//(ANY_WS* items+=Item)*
		public Group getGroup_2() { return cGroup_2; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_0() { return cANY_WSParserRuleCall_2_0; }

		//items+=Item
		public Assignment getItemsAssignment_2_1() { return cItemsAssignment_2_1; }

		//Item
		public RuleCall getItemsItemParserRuleCall_2_1_0() { return cItemsItemParserRuleCall_2_1_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_3() { return cANY_WSParserRuleCall_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class UnorderedListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnorderedList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUnorderedListAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cUlKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cANY_WSParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cItemsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cItemsItemParserRuleCall_2_1_0 = (RuleCall)cItemsAssignment_2_1.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//UnorderedList:
		//
		//	{UnorderedList} "ul[" (ANY_WS* items+=Item)* ANY_WS* "]";
		public ParserRule getRule() { return rule; }

		//{UnorderedList} "ul[" (ANY_WS* items+=Item)* ANY_WS* "]"
		public Group getGroup() { return cGroup; }

		//{UnorderedList}
		public Action getUnorderedListAction_0() { return cUnorderedListAction_0; }

		//"ul["
		public Keyword getUlKeyword_1() { return cUlKeyword_1; }

		//(ANY_WS* items+=Item)*
		public Group getGroup_2() { return cGroup_2; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_0() { return cANY_WSParserRuleCall_2_0; }

		//items+=Item
		public Assignment getItemsAssignment_2_1() { return cItemsAssignment_2_1; }

		//Item
		public RuleCall getItemsItemParserRuleCall_2_1_0() { return cItemsItemParserRuleCall_2_1_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_3() { return cANY_WSParserRuleCall_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Item");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cItemAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cItemKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cMULTI_NLTerminalRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cContentsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_2_1_0 = (RuleCall)cContentsAssignment_2_1.eContents().get(0);
		private final Group cGroup_2_2 = (Group)cGroup_2.eContents().get(2);
		private final RuleCall cMULTI_NLTerminalRuleCall_2_2_0 = (RuleCall)cGroup_2_2.eContents().get(0);
		private final Assignment cContentsAssignment_2_2_1 = (Assignment)cGroup_2_2.eContents().get(1);
		private final RuleCall cContentsTextOrMarkupParserRuleCall_2_2_1_0 = (RuleCall)cContentsAssignment_2_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Item:
		//
		//	{Item} "item[" (MULTI_NL? contents+=TextOrMarkup (MULTI_NL contents+=TextOrMarkup)*)? "]";
		public ParserRule getRule() { return rule; }

		//{Item} "item[" (MULTI_NL? contents+=TextOrMarkup (MULTI_NL contents+=TextOrMarkup)*)? "]"
		public Group getGroup() { return cGroup; }

		//{Item}
		public Action getItemAction_0() { return cItemAction_0; }

		//"item["
		public Keyword getItemKeyword_1() { return cItemKeyword_1; }

		//(MULTI_NL? contents+=TextOrMarkup (MULTI_NL contents+=TextOrMarkup)*)?
		public Group getGroup_2() { return cGroup_2; }

		//MULTI_NL?
		public RuleCall getMULTI_NLTerminalRuleCall_2_0() { return cMULTI_NLTerminalRuleCall_2_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_2_1() { return cContentsAssignment_2_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_2_1_0() { return cContentsTextOrMarkupParserRuleCall_2_1_0; }

		//(MULTI_NL contents+=TextOrMarkup)*
		public Group getGroup_2_2() { return cGroup_2_2; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_2_2_0() { return cMULTI_NLTerminalRuleCall_2_2_0; }

		//contents+=TextOrMarkup
		public Assignment getContentsAssignment_2_2_1() { return cContentsAssignment_2_2_1; }

		//TextOrMarkup
		public RuleCall getContentsTextOrMarkupParserRuleCall_2_2_1_0() { return cContentsTextOrMarkupParserRuleCall_2_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class CodeRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CodeRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCodeRefAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCodeRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cElementAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cElementJvmDeclaredTypeCrossReference_2_0 = (CrossReference)cElementAssignment_2.eContents().get(0);
		private final RuleCall cElementJvmDeclaredTypeTextParserRuleCall_2_0_1 = (RuleCall)cElementJvmDeclaredTypeCrossReference_2_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAltTextAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAltTextTextOrMarkupParserRuleCall_4_1_0 = (RuleCall)cAltTextAssignment_4_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		
		//CodeRef:
		//
		//	{CodeRef} "codeRef[" element=[types::JvmDeclaredType|Text]? "]" ("[" altText=TextOrMarkup "]")?;
		public ParserRule getRule() { return rule; }

		//{CodeRef} "codeRef[" element=[types::JvmDeclaredType|Text]? "]" ("[" altText=TextOrMarkup "]")?
		public Group getGroup() { return cGroup; }

		//{CodeRef}
		public Action getCodeRefAction_0() { return cCodeRefAction_0; }

		//"codeRef["
		public Keyword getCodeRefKeyword_1() { return cCodeRefKeyword_1; }

		//element=[types::JvmDeclaredType|Text]?
		public Assignment getElementAssignment_2() { return cElementAssignment_2; }

		//[types::JvmDeclaredType|Text]
		public CrossReference getElementJvmDeclaredTypeCrossReference_2_0() { return cElementJvmDeclaredTypeCrossReference_2_0; }

		//Text
		public RuleCall getElementJvmDeclaredTypeTextParserRuleCall_2_0_1() { return cElementJvmDeclaredTypeTextParserRuleCall_2_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }

		//("[" altText=TextOrMarkup "]")?
		public Group getGroup_4() { return cGroup_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }

		//altText=TextOrMarkup
		public Assignment getAltTextAssignment_4_1() { return cAltTextAssignment_4_1; }

		//TextOrMarkup
		public RuleCall getAltTextTextOrMarkupParserRuleCall_4_1_0() { return cAltTextTextOrMarkupParserRuleCall_4_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4_2() { return cRightSquareBracketKeyword_4_2; }
	}

	public class LinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Link");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLinkAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLinkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cUrlAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cUrlTextParserRuleCall_2_0 = (RuleCall)cUrlAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cANY_WSParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTextAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTextTextParserRuleCall_6_0 = (RuleCall)cTextAssignment_6.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Link:
		//
		//	{Link} "link[" url=Text? "]" ANY_WS* "[" text=Text? "]";
		public ParserRule getRule() { return rule; }

		//{Link} "link[" url=Text? "]" ANY_WS* "[" text=Text? "]"
		public Group getGroup() { return cGroup; }

		//{Link}
		public Action getLinkAction_0() { return cLinkAction_0; }

		//"link["
		public Keyword getLinkKeyword_1() { return cLinkKeyword_1; }

		//url=Text?
		public Assignment getUrlAssignment_2() { return cUrlAssignment_2; }

		//Text
		public RuleCall getUrlTextParserRuleCall_2_0() { return cUrlTextParserRuleCall_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_4() { return cANY_WSParserRuleCall_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }

		//text=Text?
		public Assignment getTextAssignment_6() { return cTextAssignment_6; }

		//Text
		public RuleCall getTextTextParserRuleCall_6_0() { return cTextTextParserRuleCall_6_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_7() { return cRightSquareBracketKeyword_7; }
	}

	public class ImageRefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImageRef");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Keyword cImgKeyword_0_0_0 = (Keyword)cGroup_0_0.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_0_0_1 = (RuleCall)cGroup_0_0.eContents().get(1);
		private final Assignment cNameAssignment_0_0_2 = (Assignment)cGroup_0_0.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_0_0_2_0 = (RuleCall)cNameAssignment_0_0_2.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_0_0_3 = (RuleCall)cGroup_0_0.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_0_0_4 = (Keyword)cGroup_0_0.eContents().get(4);
		private final Keyword cImgKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cPathAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPathTextParserRuleCall_1_0 = (RuleCall)cPathAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cANY_WSParserRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCaptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCaptionTextParserRuleCall_5_0 = (RuleCall)cCaptionAssignment_5.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final RuleCall cANY_WSParserRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		private final Keyword cLeftSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cClazzAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cClazzTextParserRuleCall_9_0 = (RuleCall)cClazzAssignment_9.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final RuleCall cANY_WSParserRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Keyword cLeftSquareBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cStyleAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cStyleTextParserRuleCall_13_0 = (RuleCall)cStyleAssignment_13.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//// Don't think this was the discussed syntax
		// ImageRef:
		//
		//	("img:" ANY_WS* name=ID ANY_WS* "[" | "img[") path=Text / *TODO make it a crossreference to images * / "]" ANY_WS* "["
		//
		//	caption=Text? "]" ANY_WS* "[" clazz=Text? "]" ANY_WS* "[" style=Text? "]";
		public ParserRule getRule() { return rule; }

		//("img:" ANY_WS* name=ID ANY_WS* "[" | "img[") path=Text / *TODO make it a crossreference to images * / "]" ANY_WS* "["
		//
		//caption=Text? "]" ANY_WS* "[" clazz=Text? "]" ANY_WS* "[" style=Text? "]"
		public Group getGroup() { return cGroup; }

		//"img:" ANY_WS* name=ID ANY_WS* "[" | "img["
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"img:" ANY_WS* name=ID ANY_WS* "["
		public Group getGroup_0_0() { return cGroup_0_0; }

		//"img:"
		public Keyword getImgKeyword_0_0_0() { return cImgKeyword_0_0_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_0_0_1() { return cANY_WSParserRuleCall_0_0_1; }

		//name=ID
		public Assignment getNameAssignment_0_0_2() { return cNameAssignment_0_0_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0_2_0() { return cNameIDTerminalRuleCall_0_0_2_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_0_0_3() { return cANY_WSParserRuleCall_0_0_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_0_4() { return cLeftSquareBracketKeyword_0_0_4; }

		//"img["
		public Keyword getImgKeyword_0_1() { return cImgKeyword_0_1; }

		//path=Text
		public Assignment getPathAssignment_1() { return cPathAssignment_1; }

		//Text
		public RuleCall getPathTextParserRuleCall_1_0() { return cPathTextParserRuleCall_1_0; }

		/// *TODO make it a crossreference to images * / "]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_3() { return cANY_WSParserRuleCall_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_4() { return cLeftSquareBracketKeyword_4; }

		//caption=Text?
		public Assignment getCaptionAssignment_5() { return cCaptionAssignment_5; }

		//Text
		public RuleCall getCaptionTextParserRuleCall_5_0() { return cCaptionTextParserRuleCall_5_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_7() { return cANY_WSParserRuleCall_7; }

		//"["
		public Keyword getLeftSquareBracketKeyword_8() { return cLeftSquareBracketKeyword_8; }

		//clazz=Text?
		public Assignment getClazzAssignment_9() { return cClazzAssignment_9; }

		//Text
		public RuleCall getClazzTextParserRuleCall_9_0() { return cClazzTextParserRuleCall_9_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_10() { return cRightSquareBracketKeyword_10; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_11() { return cANY_WSParserRuleCall_11; }

		//"["
		public Keyword getLeftSquareBracketKeyword_12() { return cLeftSquareBracketKeyword_12; }

		//style=Text?
		public Assignment getStyleAssignment_13() { return cStyleAssignment_13; }

		//Text
		public RuleCall getStyleTextParserRuleCall_13_0() { return cStyleTextParserRuleCall_13_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_14() { return cRightSquareBracketKeyword_14; }
	}

	public class CodeBlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CodeBlock");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCodeBlockAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final RuleCall cANY_WSParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Assignment cLanguageAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cLanguageLangDefCrossReference_2_1_0 = (CrossReference)cLanguageAssignment_2_1.eContents().get(0);
		private final RuleCall cLanguageLangDefIDTerminalRuleCall_2_1_0_1 = (RuleCall)cLanguageLangDefCrossReference_2_1_0.eContents().get(1);
		private final RuleCall cANY_WSParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Keyword cRightSquareBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final RuleCall cANY_WSParserRuleCall_2_4 = (RuleCall)cGroup_2.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Assignment cContentsAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final RuleCall cContentsCodeParserRuleCall_3_0_0_0 = (RuleCall)cContentsAssignment_3_0_0.eContents().get(0);
		private final Group cGroup_3_0_1 = (Group)cGroup_3_0.eContents().get(1);
		private final Assignment cContentsAssignment_3_0_1_0 = (Assignment)cGroup_3_0_1.eContents().get(0);
		private final RuleCall cContentsMarkupInCodeParserRuleCall_3_0_1_0_0 = (RuleCall)cContentsAssignment_3_0_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_3_0_1_1 = (Assignment)cGroup_3_0_1.eContents().get(1);
		private final RuleCall cContentsCodeParserRuleCall_3_0_1_1_0 = (RuleCall)cContentsAssignment_3_0_1_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cContentsAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cContentsMarkupInCodeParserRuleCall_3_1_0_0 = (RuleCall)cContentsAssignment_3_1_0.eContents().get(0);
		private final Assignment cContentsAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cContentsCodeParserRuleCall_3_1_1_0 = (RuleCall)cContentsAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CodeBlock:
		//
		//	{CodeBlock} "code[" (ANY_WS* language=[LangDef] ANY_WS* "]" ANY_WS* "[")? (contents+=Code (contents+=MarkupInCode
		//
		//	contents+=Code?)* | (contents+=MarkupInCode contents+=Code?)+)? "]";
		public ParserRule getRule() { return rule; }

		//{CodeBlock} "code[" (ANY_WS* language=[LangDef] ANY_WS* "]" ANY_WS* "[")? (contents+=Code (contents+=MarkupInCode
		//
		//contents+=Code?)* | (contents+=MarkupInCode contents+=Code?)+)? "]"
		public Group getGroup() { return cGroup; }

		//{CodeBlock}
		public Action getCodeBlockAction_0() { return cCodeBlockAction_0; }

		//"code["
		public Keyword getCodeKeyword_1() { return cCodeKeyword_1; }

		//(ANY_WS* language=[LangDef] ANY_WS* "]" ANY_WS* "[")?
		public Group getGroup_2() { return cGroup_2; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_0() { return cANY_WSParserRuleCall_2_0; }

		//language=[LangDef]
		public Assignment getLanguageAssignment_2_1() { return cLanguageAssignment_2_1; }

		//[LangDef]
		public CrossReference getLanguageLangDefCrossReference_2_1_0() { return cLanguageLangDefCrossReference_2_1_0; }

		//ID
		public RuleCall getLanguageLangDefIDTerminalRuleCall_2_1_0_1() { return cLanguageLangDefIDTerminalRuleCall_2_1_0_1; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_2() { return cANY_WSParserRuleCall_2_2; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_3() { return cRightSquareBracketKeyword_2_3; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_2_4() { return cANY_WSParserRuleCall_2_4; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_5() { return cLeftSquareBracketKeyword_2_5; }

		//(contents+=Code (contents+=MarkupInCode contents+=Code?)* | (contents+=MarkupInCode contents+=Code?)+)?
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//contents+=Code (contents+=MarkupInCode contents+=Code?)*
		public Group getGroup_3_0() { return cGroup_3_0; }

		//contents+=Code
		public Assignment getContentsAssignment_3_0_0() { return cContentsAssignment_3_0_0; }

		//Code
		public RuleCall getContentsCodeParserRuleCall_3_0_0_0() { return cContentsCodeParserRuleCall_3_0_0_0; }

		//(contents+=MarkupInCode contents+=Code?)*
		public Group getGroup_3_0_1() { return cGroup_3_0_1; }

		//contents+=MarkupInCode
		public Assignment getContentsAssignment_3_0_1_0() { return cContentsAssignment_3_0_1_0; }

		//MarkupInCode
		public RuleCall getContentsMarkupInCodeParserRuleCall_3_0_1_0_0() { return cContentsMarkupInCodeParserRuleCall_3_0_1_0_0; }

		//contents+=Code?
		public Assignment getContentsAssignment_3_0_1_1() { return cContentsAssignment_3_0_1_1; }

		//Code
		public RuleCall getContentsCodeParserRuleCall_3_0_1_1_0() { return cContentsCodeParserRuleCall_3_0_1_1_0; }

		//(contents+=MarkupInCode contents+=Code?)+
		public Group getGroup_3_1() { return cGroup_3_1; }

		//contents+=MarkupInCode
		public Assignment getContentsAssignment_3_1_0() { return cContentsAssignment_3_1_0; }

		//MarkupInCode
		public RuleCall getContentsMarkupInCodeParserRuleCall_3_1_0_0() { return cContentsMarkupInCodeParserRuleCall_3_1_0_0; }

		//contents+=Code?
		public Assignment getContentsAssignment_3_1_1() { return cContentsAssignment_3_1_1; }

		//Code
		public RuleCall getContentsCodeParserRuleCall_3_1_1_0() { return cContentsCodeParserRuleCall_3_1_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class TodoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Todo");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTodoAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTodoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextTextParserRuleCall_2_0 = (RuleCall)cTextAssignment_2.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Todo:
		//
		//	{Todo} "todo[" text=Text? "]";
		public ParserRule getRule() { return rule; }

		//{Todo} "todo[" text=Text? "]"
		public Group getGroup() { return cGroup; }

		//{Todo}
		public Action getTodoAction_0() { return cTodoAction_0; }

		//"todo["
		public Keyword getTodoKeyword_1() { return cTodoKeyword_1; }

		//text=Text?
		public Assignment getTextAssignment_2() { return cTextAssignment_2; }

		//Text
		public RuleCall getTextTextParserRuleCall_2_0() { return cTextTextParserRuleCall_2_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3() { return cRightSquareBracketKeyword_3; }
	}

	public class CodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Code");
		private final Assignment cContentsAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cContentsCodeTextParserRuleCall_0 = (RuleCall)cContentsAssignment.eContents().get(0);
		
		//Code:
		//
		//	contents=CodeText;
		public ParserRule getRule() { return rule; }

		//contents=CodeText
		public Assignment getContentsAssignment() { return cContentsAssignment; }

		//CodeText
		public RuleCall getContentsCodeTextParserRuleCall_0() { return cContentsCodeTextParserRuleCall_0; }
	}

	public class MarkupInCodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MarkupInCode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmphasizeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAnchorParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRefParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cTodoParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//MarkupInCode:
		//
		//	Emphasize | Anchor | Ref | Todo;
		public ParserRule getRule() { return rule; }

		//Emphasize | Anchor | Ref | Todo
		public Alternatives getAlternatives() { return cAlternatives; }

		//Emphasize
		public RuleCall getEmphasizeParserRuleCall_0() { return cEmphasizeParserRuleCall_0; }

		//Anchor
		public RuleCall getAnchorParserRuleCall_1() { return cAnchorParserRuleCall_1; }

		//Ref
		public RuleCall getRefParserRuleCall_2() { return cRefParserRuleCall_2; }

		//Todo
		public RuleCall getTodoParserRuleCall_3() { return cTodoParserRuleCall_3; }
	}

	public class LangDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LangDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cCodelanguageDefKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final RuleCall cANY_WSParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Group cGroup_0_5 = (Group)cGroup_0.eContents().get(5);
		private final RuleCall cANY_WSParserRuleCall_0_5_0 = (RuleCall)cGroup_0_5.eContents().get(0);
		private final Assignment cKeywordsAssignment_0_5_1 = (Assignment)cGroup_0_5.eContents().get(1);
		private final RuleCall cKeywordsKeyWordParserRuleCall_0_5_1_0 = (RuleCall)cKeywordsAssignment_0_5_1.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_0_5_2 = (RuleCall)cGroup_0_5.eContents().get(2);
		private final Group cGroup_0_5_3 = (Group)cGroup_0_5.eContents().get(3);
		private final Keyword cCommaKeyword_0_5_3_0 = (Keyword)cGroup_0_5_3.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_0_5_3_1 = (RuleCall)cGroup_0_5_3.eContents().get(1);
		private final Assignment cKeywordsAssignment_0_5_3_2 = (Assignment)cGroup_0_5_3.eContents().get(2);
		private final RuleCall cKeywordsKeyWordParserRuleCall_0_5_3_2_0 = (RuleCall)cKeywordsAssignment_0_5_3_2.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_0_5_3_3 = (RuleCall)cGroup_0_5_3.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_0_6 = (Keyword)cGroup_0.eContents().get(6);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cLangDefAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Keyword cCodelanguageDefKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final RuleCall cANY_WSParserRuleCall_1_2_0 = (RuleCall)cGroup_1_2.eContents().get(0);
		private final Assignment cKeywordsAssignment_1_2_1 = (Assignment)cGroup_1_2.eContents().get(1);
		private final RuleCall cKeywordsKeyWordParserRuleCall_1_2_1_0 = (RuleCall)cKeywordsAssignment_1_2_1.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_1_2_2 = (RuleCall)cGroup_1_2.eContents().get(2);
		private final Group cGroup_1_2_3 = (Group)cGroup_1_2.eContents().get(3);
		private final Keyword cCommaKeyword_1_2_3_0 = (Keyword)cGroup_1_2_3.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_1_2_3_1 = (RuleCall)cGroup_1_2_3.eContents().get(1);
		private final Assignment cKeywordsAssignment_1_2_3_2 = (Assignment)cGroup_1_2_3.eContents().get(2);
		private final RuleCall cKeywordsKeyWordParserRuleCall_1_2_3_2_0 = (RuleCall)cKeywordsAssignment_1_2_3_2.eContents().get(0);
		private final RuleCall cANY_WSParserRuleCall_1_2_3_3 = (RuleCall)cGroup_1_2_3.eContents().get(3);
		private final Keyword cRightSquareBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//LangDef:
		//
		//	"codelanguage-def[" name=ID "]" ANY_WS* "[" (ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord
		//
		//	ANY_WS*)*)? "]" | {LangDef} "codelanguage-def[" (ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord
		//
		//	ANY_WS*)*)? "]";
		public ParserRule getRule() { return rule; }

		//"codelanguage-def[" name=ID "]" ANY_WS* "[" (ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord
		//
		//ANY_WS*)*)? "]" | {LangDef} "codelanguage-def[" (ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord
		//
		//ANY_WS*)*)? "]"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"codelanguage-def[" name=ID "]" ANY_WS* "[" (ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord
		//
		//ANY_WS*)*)? "]"
		public Group getGroup_0() { return cGroup_0; }

		//"codelanguage-def["
		public Keyword getCodelanguageDefKeyword_0_0() { return cCodelanguageDefKeyword_0_0; }

		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_2() { return cRightSquareBracketKeyword_0_2; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_0_3() { return cANY_WSParserRuleCall_0_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_4() { return cLeftSquareBracketKeyword_0_4; }

		//(ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord ANY_WS*)*)?
		public Group getGroup_0_5() { return cGroup_0_5; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_0_5_0() { return cANY_WSParserRuleCall_0_5_0; }

		//keywords+=KeyWord
		public Assignment getKeywordsAssignment_0_5_1() { return cKeywordsAssignment_0_5_1; }

		//KeyWord
		public RuleCall getKeywordsKeyWordParserRuleCall_0_5_1_0() { return cKeywordsKeyWordParserRuleCall_0_5_1_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_0_5_2() { return cANY_WSParserRuleCall_0_5_2; }

		//("," ANY_WS* keywords+=KeyWord ANY_WS*)*
		public Group getGroup_0_5_3() { return cGroup_0_5_3; }

		//","
		public Keyword getCommaKeyword_0_5_3_0() { return cCommaKeyword_0_5_3_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_0_5_3_1() { return cANY_WSParserRuleCall_0_5_3_1; }

		//keywords+=KeyWord
		public Assignment getKeywordsAssignment_0_5_3_2() { return cKeywordsAssignment_0_5_3_2; }

		//KeyWord
		public RuleCall getKeywordsKeyWordParserRuleCall_0_5_3_2_0() { return cKeywordsKeyWordParserRuleCall_0_5_3_2_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_0_5_3_3() { return cANY_WSParserRuleCall_0_5_3_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_6() { return cRightSquareBracketKeyword_0_6; }

		//{LangDef} "codelanguage-def[" (ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord ANY_WS*)*)? "]"
		public Group getGroup_1() { return cGroup_1; }

		//{LangDef}
		public Action getLangDefAction_1_0() { return cLangDefAction_1_0; }

		//"codelanguage-def["
		public Keyword getCodelanguageDefKeyword_1_1() { return cCodelanguageDefKeyword_1_1; }

		//(ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord ANY_WS*)*)?
		public Group getGroup_1_2() { return cGroup_1_2; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_1_2_0() { return cANY_WSParserRuleCall_1_2_0; }

		//keywords+=KeyWord
		public Assignment getKeywordsAssignment_1_2_1() { return cKeywordsAssignment_1_2_1; }

		//KeyWord
		public RuleCall getKeywordsKeyWordParserRuleCall_1_2_1_0() { return cKeywordsKeyWordParserRuleCall_1_2_1_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_1_2_2() { return cANY_WSParserRuleCall_1_2_2; }

		//("," ANY_WS* keywords+=KeyWord ANY_WS*)*
		public Group getGroup_1_2_3() { return cGroup_1_2_3; }

		//","
		public Keyword getCommaKeyword_1_2_3_0() { return cCommaKeyword_1_2_3_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_1_2_3_1() { return cANY_WSParserRuleCall_1_2_3_1; }

		//keywords+=KeyWord
		public Assignment getKeywordsAssignment_1_2_3_2() { return cKeywordsAssignment_1_2_3_2; }

		//KeyWord
		public RuleCall getKeywordsKeyWordParserRuleCall_1_2_3_2_0() { return cKeywordsKeyWordParserRuleCall_1_2_3_2_0; }

		//ANY_WS*
		public RuleCall getANY_WSParserRuleCall_1_2_3_3() { return cANY_WSParserRuleCall_1_2_3_3; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_3() { return cRightSquareBracketKeyword_1_3; }
	}

	public class CodeTextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CodeText");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cMULTI_NLTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cSINGLE_NLTerminalRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cANY_OTHERTerminalRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final Keyword cReverseSolidusLeftSquareBracketKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		private final Keyword cReverseSolidusRightSquareBracketKeyword_6 = (Keyword)cAlternatives.eContents().get(6);
		private final Keyword cCommaKeyword_7 = (Keyword)cAlternatives.eContents().get(7);
		private final Keyword cHyphenMinusKeyword_8 = (Keyword)cAlternatives.eContents().get(8);
		private final Keyword cReverseSolidusColonKeyword_9 = (Keyword)cAlternatives.eContents().get(9);
		private final Keyword cReverseSolidusPercentSignKeyword_10 = (Keyword)cAlternatives.eContents().get(10);
		
		//CodeText:
		//
		//	(ID | MULTI_NL | WS | SINGLE_NL | ANY_OTHER | "\\[" | "\\]" | "," | "-" | "\\:" | "\\%")+;
		public ParserRule getRule() { return rule; }

		//(ID | MULTI_NL | WS | SINGLE_NL | ANY_OTHER | "\\[" | "\\]" | "," | "-" | "\\:" | "\\%")+
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_1() { return cMULTI_NLTerminalRuleCall_1; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }

		//SINGLE_NL
		public RuleCall getSINGLE_NLTerminalRuleCall_3() { return cSINGLE_NLTerminalRuleCall_3; }

		//ANY_OTHER
		public RuleCall getANY_OTHERTerminalRuleCall_4() { return cANY_OTHERTerminalRuleCall_4; }

		//"\\["
		public Keyword getReverseSolidusLeftSquareBracketKeyword_5() { return cReverseSolidusLeftSquareBracketKeyword_5; }

		//"\\]"
		public Keyword getReverseSolidusRightSquareBracketKeyword_6() { return cReverseSolidusRightSquareBracketKeyword_6; }

		//","
		public Keyword getCommaKeyword_7() { return cCommaKeyword_7; }

		//"-"
		public Keyword getHyphenMinusKeyword_8() { return cHyphenMinusKeyword_8; }

		//"\\:"
		public Keyword getReverseSolidusColonKeyword_9() { return cReverseSolidusColonKeyword_9; }

		//"\\%"
		public Keyword getReverseSolidusPercentSignKeyword_10() { return cReverseSolidusPercentSignKeyword_10; }
	}

	public class ANY_WSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ANY_WS");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMULTI_NLTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSINGLE_NLTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cWSTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ANY_WS:
		//
		//	MULTI_NL | SINGLE_NL | WS;
		public ParserRule getRule() { return rule; }

		//MULTI_NL | SINGLE_NL | WS
		public Alternatives getAlternatives() { return cAlternatives; }

		//MULTI_NL
		public RuleCall getMULTI_NLTerminalRuleCall_0() { return cMULTI_NLTerminalRuleCall_0; }

		//SINGLE_NL
		public RuleCall getSINGLE_NLTerminalRuleCall_1() { return cSINGLE_NLTerminalRuleCall_1; }

		//WS
		public RuleCall getWSTerminalRuleCall_2() { return cWSTerminalRuleCall_2; }
	}

	public class KeyWordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KeyWord");
		private final RuleCall cUnpunctTextParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//KeyWord:
		//
		//	UnpunctText;
		public ParserRule getRule() { return rule; }

		//UnpunctText
		public RuleCall getUnpunctTextParserRuleCall() { return cUnpunctTextParserRuleCall; }
	}
	
	
	private XdocFileElements pXdocFile;
	private DocumentElements pDocument;
	private GlossaryElements pGlossary;
	private PartElements pPart;
	private PartRefElements pPartRef;
	private GlossaryEntryElements pGlossaryEntry;
	private ChapterElements pChapter;
	private ChapterRefElements pChapterRef;
	private SectionElements pSection;
	private SectionRefElements pSectionRef;
	private Section2Elements pSection2;
	private Section2RefElements pSection2Ref;
	private Section3Elements pSection3;
	private Section4Elements pSection4;
	private TextOrMarkupElements pTextOrMarkup;
	private TextPartElements pTextPart;
	private TextElements pText;
	private UnpunctTextElements pUnpunctText;
	private MarkUpElements pMarkUp;
	private TableElements pTable;
	private TableRowElements pTableRow;
	private TableDataElements pTableData;
	private EmphasizeElements pEmphasize;
	private AnchorElements pAnchor;
	private RefElements pRef;
	private OrderedListElements pOrderedList;
	private UnorderedListElements pUnorderedList;
	private ItemElements pItem;
	private CodeRefElements pCodeRef;
	private LinkElements pLink;
	private ImageRefElements pImageRef;
	private CodeBlockElements pCodeBlock;
	private TodoElements pTodo;
	private CodeElements pCode;
	private MarkupInCodeElements pMarkupInCode;
	private LangDefElements pLangDef;
	private CodeTextElements pCodeText;
	private ANY_WSElements pANY_WS;
	private KeyWordElements pKeyWord;
	private TerminalRule tID;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tMULTI_NL;
	private TerminalRule tSINGLE_NL;
	private TerminalRule tWS;
	private TerminalRule tANY_OTHER;
	
	private final Grammar grammar;

	@Inject
	public XdocGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.eclipse.xtext.xdoc.Xdoc".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//XdocFile:
	//
	//	{XdocFile} WS? MULTI_NL? (mainSection=(Document | Part | Chapter | Section | Section2) MULTI_NL?)?;
	public XdocFileElements getXdocFileAccess() {
		return (pXdocFile != null) ? pXdocFile : (pXdocFile = new XdocFileElements());
	}
	
	public ParserRule getXdocFileRule() {
		return getXdocFileAccess().getRule();
	}

	//Document:
	//
	//	"document[" title=TextOrMarkup "]" (MULTI_NL "subtitle[" subtitle=TextOrMarkup "]")? (MULTI_NL "authors["
	//
	//	authors=TextOrMarkup "]")? (MULTI_NL langDefs+=LangDef)* (MULTI_NL glossary=Glossary)? (MULTI_NL (chapters+=Chapter
	//
	//	(MULTI_NL chapters+=Chapter)* | parts+=Part (MULTI_NL parts+=Part)*)?);
	public DocumentElements getDocumentAccess() {
		return (pDocument != null) ? pDocument : (pDocument = new DocumentElements());
	}
	
	public ParserRule getDocumentRule() {
		return getDocumentAccess().getRule();
	}

	//Glossary:
	//
	//	(MULTI_NL glossaryEntry+=GlossaryEntry)+;
	public GlossaryElements getGlossaryAccess() {
		return (pGlossary != null) ? pGlossary : (pGlossary = new GlossaryElements());
	}
	
	public ParserRule getGlossaryRule() {
		return getGlossaryAccess().getRule();
	}

	//Part:
	//
	//	PartRef | ("part:" name=ID "[" | "part[") title=TextOrMarkup "]" (MULTI_NL chapters+=Chapter)*;
	public PartElements getPartAccess() {
		return (pPart != null) ? pPart : (pPart = new PartElements());
	}
	
	public ParserRule getPartRule() {
		return getPartAccess().getRule();
	}

	//PartRef:
	//
	//	"part-ref[" part=[Part] "]";
	public PartRefElements getPartRefAccess() {
		return (pPartRef != null) ? pPartRef : (pPartRef = new PartRefElements());
	}
	
	public ParserRule getPartRefRule() {
		return getPartRefAccess().getRule();
	}

	//GlossaryEntry:
	//
	//	"gloss-entry[" name=UnpunctText ("," ANY_WS* alias+=UnpunctText ANY_WS*)* "]" ANY_WS* "[" description+=TextOrMarkup
	//
	//	(MULTI_NL description+=TextOrMarkup)* "]";
	public GlossaryEntryElements getGlossaryEntryAccess() {
		return (pGlossaryEntry != null) ? pGlossaryEntry : (pGlossaryEntry = new GlossaryEntryElements());
	}
	
	public ParserRule getGlossaryEntryRule() {
		return getGlossaryEntryAccess().getRule();
	}

	//Chapter:
	//
	//	ChapterRef | ("chapter:" name=ID "[" | "chapter[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*
	//
	//	(MULTI_NL subSections+=Section)*;
	public ChapterElements getChapterAccess() {
		return (pChapter != null) ? pChapter : (pChapter = new ChapterElements());
	}
	
	public ParserRule getChapterRule() {
		return getChapterAccess().getRule();
	}

	//ChapterRef:
	//
	//	"chapter-ref[" chapter=[Chapter] "]";
	public ChapterRefElements getChapterRefAccess() {
		return (pChapterRef != null) ? pChapterRef : (pChapterRef = new ChapterRefElements());
	}
	
	public ParserRule getChapterRefRule() {
		return getChapterRefAccess().getRule();
	}

	//Section:
	//
	//	SectionRef | ("section:" name=ID "[" | "section[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*
	//
	//	(MULTI_NL subSections+=Section2)*;
	public SectionElements getSectionAccess() {
		return (pSection != null) ? pSection : (pSection = new SectionElements());
	}
	
	public ParserRule getSectionRule() {
		return getSectionAccess().getRule();
	}

	//SectionRef:
	//
	//	"section-ref[" section=[Section] "]";
	public SectionRefElements getSectionRefAccess() {
		return (pSectionRef != null) ? pSectionRef : (pSectionRef = new SectionRefElements());
	}
	
	public ParserRule getSectionRefRule() {
		return getSectionRefAccess().getRule();
	}

	//Section2:
	//
	//	Section2Ref | ("section2:" name=ID "[" | "section2[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*
	//
	//	(MULTI_NL subSections+=Section3)*;
	public Section2Elements getSection2Access() {
		return (pSection2 != null) ? pSection2 : (pSection2 = new Section2Elements());
	}
	
	public ParserRule getSection2Rule() {
		return getSection2Access().getRule();
	}

	//Section2Ref:
	//
	//	"section2-ref[" section2=[Section2] "]";
	public Section2RefElements getSection2RefAccess() {
		return (pSection2Ref != null) ? pSection2Ref : (pSection2Ref = new Section2RefElements());
	}
	
	public ParserRule getSection2RefRule() {
		return getSection2RefAccess().getRule();
	}

	//Section3:
	//
	//	("section3:" name=ID "[" | "section3[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)* (MULTI_NL
	//
	//	subSections+=Section4)*;
	public Section3Elements getSection3Access() {
		return (pSection3 != null) ? pSection3 : (pSection3 = new Section3Elements());
	}
	
	public ParserRule getSection3Rule() {
		return getSection3Access().getRule();
	}

	//Section4:
	//
	//	("section4:" name=ID "[" | "section4[") title=TextOrMarkup "]" (MULTI_NL contents+=TextOrMarkup)*;
	public Section4Elements getSection4Access() {
		return (pSection4 != null) ? pSection4 : (pSection4 = new Section4Elements());
	}
	
	public ParserRule getSection4Rule() {
		return getSection4Access().getRule();
	}

	//TextOrMarkup:
	//
	//	contents+=TextPart (contents+=MarkUp contents+=TextPart?)* | (contents+=MarkUp contents+=TextPart?)+;
	public TextOrMarkupElements getTextOrMarkupAccess() {
		return (pTextOrMarkup != null) ? pTextOrMarkup : (pTextOrMarkup = new TextOrMarkupElements());
	}
	
	public ParserRule getTextOrMarkupRule() {
		return getTextOrMarkupAccess().getRule();
	}

	//TextPart:
	//
	//	text=Text;
	public TextPartElements getTextPartAccess() {
		return (pTextPart != null) ? pTextPart : (pTextPart = new TextPartElements());
	}
	
	public ParserRule getTextPartRule() {
		return getTextPartAccess().getRule();
	}

	//Text:
	//
	//	(ID | WS | SINGLE_NL | ANY_OTHER | "\\[" | "\\]" | "," | "-" | "\\:" | "\\%")+;
	public TextElements getTextAccess() {
		return (pText != null) ? pText : (pText = new TextElements());
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}

	//UnpunctText:
	//
	//	(ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%")+ (WS (ID | ANY_OTHER | "\\[" | "\\]" | "-" | "\\:" | "\\%"))*;
	public UnpunctTextElements getUnpunctTextAccess() {
		return (pUnpunctText != null) ? pUnpunctText : (pUnpunctText = new UnpunctTextElements());
	}
	
	public ParserRule getUnpunctTextRule() {
		return getUnpunctTextAccess().getRule();
	}

	//MarkUp:
	//
	//	Emphasize | Anchor | Ref | OrderedList | UnorderedList | CodeBlock | CodeRef | Link | ImageRef | Table | Todo;
	public MarkUpElements getMarkUpAccess() {
		return (pMarkUp != null) ? pMarkUp : (pMarkUp = new MarkUpElements());
	}
	
	public ParserRule getMarkUpRule() {
		return getMarkUpAccess().getRule();
	}

	//Table:
	//
	//	{Table} "table[" (ANY_WS* rows+=TableRow)* ANY_WS* "]";
	public TableElements getTableAccess() {
		return (pTable != null) ? pTable : (pTable = new TableElements());
	}
	
	public ParserRule getTableRule() {
		return getTableAccess().getRule();
	}

	//TableRow:
	//
	//	{TableRow} "tr[" (ANY_WS* data+=TableData)* ANY_WS* "]";
	public TableRowElements getTableRowAccess() {
		return (pTableRow != null) ? pTableRow : (pTableRow = new TableRowElements());
	}
	
	public ParserRule getTableRowRule() {
		return getTableRowAccess().getRule();
	}

	//TableData:
	//
	//	{TableData} "td[" (MULTI_NL? contents+=TextOrMarkup (MULTI_NL contents+=TextOrMarkup)*)? "]";
	public TableDataElements getTableDataAccess() {
		return (pTableData != null) ? pTableData : (pTableData = new TableDataElements());
	}
	
	public ParserRule getTableDataRule() {
		return getTableDataAccess().getRule();
	}

	//Emphasize:
	//
	//	{Emphasize} "e[" (MULTI_NL? contents+=TextOrMarkup MULTI_NL?)? "]";
	public EmphasizeElements getEmphasizeAccess() {
		return (pEmphasize != null) ? pEmphasize : (pEmphasize = new EmphasizeElements());
	}
	
	public ParserRule getEmphasizeRule() {
		return getEmphasizeAccess().getRule();
	}

	//Anchor:
	//
	//	"a[" name=ID "]";
	public AnchorElements getAnchorAccess() {
		return (pAnchor != null) ? pAnchor : (pAnchor = new AnchorElements());
	}
	
	public ParserRule getAnchorRule() {
		return getAnchorAccess().getRule();
	}

	//Ref:
	//
	//	"ref:" ref=[Identifiable] ("[" MULTI_NL? (contents+=TextOrMarkup MULTI_NL?)? "]")?;
	public RefElements getRefAccess() {
		return (pRef != null) ? pRef : (pRef = new RefElements());
	}
	
	public ParserRule getRefRule() {
		return getRefAccess().getRule();
	}

	//OrderedList:
	//
	//	{OrderedList} "ol[" (ANY_WS* items+=Item)* ANY_WS* "]";
	public OrderedListElements getOrderedListAccess() {
		return (pOrderedList != null) ? pOrderedList : (pOrderedList = new OrderedListElements());
	}
	
	public ParserRule getOrderedListRule() {
		return getOrderedListAccess().getRule();
	}

	//UnorderedList:
	//
	//	{UnorderedList} "ul[" (ANY_WS* items+=Item)* ANY_WS* "]";
	public UnorderedListElements getUnorderedListAccess() {
		return (pUnorderedList != null) ? pUnorderedList : (pUnorderedList = new UnorderedListElements());
	}
	
	public ParserRule getUnorderedListRule() {
		return getUnorderedListAccess().getRule();
	}

	//Item:
	//
	//	{Item} "item[" (MULTI_NL? contents+=TextOrMarkup (MULTI_NL contents+=TextOrMarkup)*)? "]";
	public ItemElements getItemAccess() {
		return (pItem != null) ? pItem : (pItem = new ItemElements());
	}
	
	public ParserRule getItemRule() {
		return getItemAccess().getRule();
	}

	//CodeRef:
	//
	//	{CodeRef} "codeRef[" element=[types::JvmDeclaredType|Text]? "]" ("[" altText=TextOrMarkup "]")?;
	public CodeRefElements getCodeRefAccess() {
		return (pCodeRef != null) ? pCodeRef : (pCodeRef = new CodeRefElements());
	}
	
	public ParserRule getCodeRefRule() {
		return getCodeRefAccess().getRule();
	}

	//Link:
	//
	//	{Link} "link[" url=Text? "]" ANY_WS* "[" text=Text? "]";
	public LinkElements getLinkAccess() {
		return (pLink != null) ? pLink : (pLink = new LinkElements());
	}
	
	public ParserRule getLinkRule() {
		return getLinkAccess().getRule();
	}

	//// Don't think this was the discussed syntax
	// ImageRef:
	//
	//	("img:" ANY_WS* name=ID ANY_WS* "[" | "img[") path=Text / *TODO make it a crossreference to images * / "]" ANY_WS* "["
	//
	//	caption=Text? "]" ANY_WS* "[" clazz=Text? "]" ANY_WS* "[" style=Text? "]";
	public ImageRefElements getImageRefAccess() {
		return (pImageRef != null) ? pImageRef : (pImageRef = new ImageRefElements());
	}
	
	public ParserRule getImageRefRule() {
		return getImageRefAccess().getRule();
	}

	//CodeBlock:
	//
	//	{CodeBlock} "code[" (ANY_WS* language=[LangDef] ANY_WS* "]" ANY_WS* "[")? (contents+=Code (contents+=MarkupInCode
	//
	//	contents+=Code?)* | (contents+=MarkupInCode contents+=Code?)+)? "]";
	public CodeBlockElements getCodeBlockAccess() {
		return (pCodeBlock != null) ? pCodeBlock : (pCodeBlock = new CodeBlockElements());
	}
	
	public ParserRule getCodeBlockRule() {
		return getCodeBlockAccess().getRule();
	}

	//Todo:
	//
	//	{Todo} "todo[" text=Text? "]";
	public TodoElements getTodoAccess() {
		return (pTodo != null) ? pTodo : (pTodo = new TodoElements());
	}
	
	public ParserRule getTodoRule() {
		return getTodoAccess().getRule();
	}

	//Code:
	//
	//	contents=CodeText;
	public CodeElements getCodeAccess() {
		return (pCode != null) ? pCode : (pCode = new CodeElements());
	}
	
	public ParserRule getCodeRule() {
		return getCodeAccess().getRule();
	}

	//MarkupInCode:
	//
	//	Emphasize | Anchor | Ref | Todo;
	public MarkupInCodeElements getMarkupInCodeAccess() {
		return (pMarkupInCode != null) ? pMarkupInCode : (pMarkupInCode = new MarkupInCodeElements());
	}
	
	public ParserRule getMarkupInCodeRule() {
		return getMarkupInCodeAccess().getRule();
	}

	//LangDef:
	//
	//	"codelanguage-def[" name=ID "]" ANY_WS* "[" (ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord
	//
	//	ANY_WS*)*)? "]" | {LangDef} "codelanguage-def[" (ANY_WS* keywords+=KeyWord ANY_WS* ("," ANY_WS* keywords+=KeyWord
	//
	//	ANY_WS*)*)? "]";
	public LangDefElements getLangDefAccess() {
		return (pLangDef != null) ? pLangDef : (pLangDef = new LangDefElements());
	}
	
	public ParserRule getLangDefRule() {
		return getLangDefAccess().getRule();
	}

	//CodeText:
	//
	//	(ID | MULTI_NL | WS | SINGLE_NL | ANY_OTHER | "\\[" | "\\]" | "," | "-" | "\\:" | "\\%")+;
	public CodeTextElements getCodeTextAccess() {
		return (pCodeText != null) ? pCodeText : (pCodeText = new CodeTextElements());
	}
	
	public ParserRule getCodeTextRule() {
		return getCodeTextAccess().getRule();
	}

	//ANY_WS:
	//
	//	MULTI_NL | SINGLE_NL | WS;
	public ANY_WSElements getANY_WSAccess() {
		return (pANY_WS != null) ? pANY_WS : (pANY_WS = new ANY_WSElements());
	}
	
	public ParserRule getANY_WSRule() {
		return getANY_WSAccess().getRule();
	}

	//KeyWord:
	//
	//	UnpunctText;
	public KeyWordElements getKeyWordAccess() {
		return (pKeyWord != null) ? pKeyWord : (pKeyWord = new KeyWordElements());
	}
	
	public ParserRule getKeyWordRule() {
		return getKeyWordAccess().getRule();
	}

	////(ID | "-")+; 
	// terminal ID:
	//
	//	("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal SL_COMMENT:
	//
	//	"%%" !("\n" | "\r")* ("\r"? "\n");
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal MULTI_NL:
	//
	//	"\r"? "\n" / *(' ' | '\t')** / ("\r"? "\n")+;
	public TerminalRule getMULTI_NLRule() {
		return (tMULTI_NL != null) ? tMULTI_NL : (tMULTI_NL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "MULTI_NL"));
	} 

	//terminal SINGLE_NL:
	//
	//	"\r"? "\n";
	public TerminalRule getSINGLE_NLRule() {
		return (tSINGLE_NL != null) ? tSINGLE_NL : (tSINGLE_NL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SINGLE_NL"));
	} 

	//terminal WS:
	//
	//	" " | "\t";
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return (tANY_OTHER != null) ? tANY_OTHER : (tANY_OTHER = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ANY_OTHER"));
	} 
}
